
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Users
 * 
 */
export type Users = $Result.DefaultSelection<Prisma.$UsersPayload>
/**
 * Model Employers
 * 
 */
export type Employers = $Result.DefaultSelection<Prisma.$EmployersPayload>
/**
 * Model ForeignWorkers
 * 
 */
export type ForeignWorkers = $Result.DefaultSelection<Prisma.$ForeignWorkersPayload>
/**
 * Model HealthChecks
 * 
 */
export type HealthChecks = $Result.DefaultSelection<Prisma.$HealthChecksPayload>
/**
 * Model ApiRequests
 * 
 */
export type ApiRequests = $Result.DefaultSelection<Prisma.$ApiRequestsPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.users.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.users.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.users`: Exposes CRUD operations for the **Users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.UsersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employers`: Exposes CRUD operations for the **Employers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employers
    * const employers = await prisma.employers.findMany()
    * ```
    */
  get employers(): Prisma.EmployersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.foreignWorkers`: Exposes CRUD operations for the **ForeignWorkers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ForeignWorkers
    * const foreignWorkers = await prisma.foreignWorkers.findMany()
    * ```
    */
  get foreignWorkers(): Prisma.ForeignWorkersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.healthChecks`: Exposes CRUD operations for the **HealthChecks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HealthChecks
    * const healthChecks = await prisma.healthChecks.findMany()
    * ```
    */
  get healthChecks(): Prisma.HealthChecksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.apiRequests`: Exposes CRUD operations for the **ApiRequests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApiRequests
    * const apiRequests = await prisma.apiRequests.findMany()
    * ```
    */
  get apiRequests(): Prisma.ApiRequestsDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.2.1
   * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Users: 'Users',
    Employers: 'Employers',
    ForeignWorkers: 'ForeignWorkers',
    HealthChecks: 'HealthChecks',
    ApiRequests: 'ApiRequests'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "users" | "employers" | "foreignWorkers" | "healthChecks" | "apiRequests"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Users: {
        payload: Prisma.$UsersPayload<ExtArgs>
        fields: Prisma.UsersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findFirst: {
            args: Prisma.UsersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          findMany: {
            args: Prisma.UsersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          create: {
            args: Prisma.UsersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          createMany: {
            args: Prisma.UsersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UsersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          delete: {
            args: Prisma.UsersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          update: {
            args: Prisma.UsersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          deleteMany: {
            args: Prisma.UsersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UsersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>[]
          }
          upsert: {
            args: Prisma.UsersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.UsersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      Employers: {
        payload: Prisma.$EmployersPayload<ExtArgs>
        fields: Prisma.EmployersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EmployersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EmployersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          findFirst: {
            args: Prisma.EmployersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EmployersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          findMany: {
            args: Prisma.EmployersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>[]
          }
          create: {
            args: Prisma.EmployersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          createMany: {
            args: Prisma.EmployersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EmployersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>[]
          }
          delete: {
            args: Prisma.EmployersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          update: {
            args: Prisma.EmployersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          deleteMany: {
            args: Prisma.EmployersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EmployersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EmployersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>[]
          }
          upsert: {
            args: Prisma.EmployersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EmployersPayload>
          }
          aggregate: {
            args: Prisma.EmployersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployers>
          }
          groupBy: {
            args: Prisma.EmployersGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployersGroupByOutputType>[]
          }
          count: {
            args: Prisma.EmployersCountArgs<ExtArgs>
            result: $Utils.Optional<EmployersCountAggregateOutputType> | number
          }
        }
      }
      ForeignWorkers: {
        payload: Prisma.$ForeignWorkersPayload<ExtArgs>
        fields: Prisma.ForeignWorkersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ForeignWorkersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ForeignWorkersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          findFirst: {
            args: Prisma.ForeignWorkersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ForeignWorkersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          findMany: {
            args: Prisma.ForeignWorkersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>[]
          }
          create: {
            args: Prisma.ForeignWorkersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          createMany: {
            args: Prisma.ForeignWorkersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ForeignWorkersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>[]
          }
          delete: {
            args: Prisma.ForeignWorkersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          update: {
            args: Prisma.ForeignWorkersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          deleteMany: {
            args: Prisma.ForeignWorkersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ForeignWorkersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ForeignWorkersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>[]
          }
          upsert: {
            args: Prisma.ForeignWorkersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ForeignWorkersPayload>
          }
          aggregate: {
            args: Prisma.ForeignWorkersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateForeignWorkers>
          }
          groupBy: {
            args: Prisma.ForeignWorkersGroupByArgs<ExtArgs>
            result: $Utils.Optional<ForeignWorkersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ForeignWorkersCountArgs<ExtArgs>
            result: $Utils.Optional<ForeignWorkersCountAggregateOutputType> | number
          }
        }
      }
      HealthChecks: {
        payload: Prisma.$HealthChecksPayload<ExtArgs>
        fields: Prisma.HealthChecksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HealthChecksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HealthChecksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          findFirst: {
            args: Prisma.HealthChecksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HealthChecksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          findMany: {
            args: Prisma.HealthChecksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>[]
          }
          create: {
            args: Prisma.HealthChecksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          createMany: {
            args: Prisma.HealthChecksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HealthChecksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>[]
          }
          delete: {
            args: Prisma.HealthChecksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          update: {
            args: Prisma.HealthChecksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          deleteMany: {
            args: Prisma.HealthChecksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HealthChecksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HealthChecksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>[]
          }
          upsert: {
            args: Prisma.HealthChecksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HealthChecksPayload>
          }
          aggregate: {
            args: Prisma.HealthChecksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHealthChecks>
          }
          groupBy: {
            args: Prisma.HealthChecksGroupByArgs<ExtArgs>
            result: $Utils.Optional<HealthChecksGroupByOutputType>[]
          }
          count: {
            args: Prisma.HealthChecksCountArgs<ExtArgs>
            result: $Utils.Optional<HealthChecksCountAggregateOutputType> | number
          }
        }
      }
      ApiRequests: {
        payload: Prisma.$ApiRequestsPayload<ExtArgs>
        fields: Prisma.ApiRequestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApiRequestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApiRequestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          findFirst: {
            args: Prisma.ApiRequestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApiRequestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          findMany: {
            args: Prisma.ApiRequestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>[]
          }
          create: {
            args: Prisma.ApiRequestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          createMany: {
            args: Prisma.ApiRequestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ApiRequestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>[]
          }
          delete: {
            args: Prisma.ApiRequestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          update: {
            args: Prisma.ApiRequestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          deleteMany: {
            args: Prisma.ApiRequestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApiRequestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ApiRequestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>[]
          }
          upsert: {
            args: Prisma.ApiRequestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApiRequestsPayload>
          }
          aggregate: {
            args: Prisma.ApiRequestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApiRequests>
          }
          groupBy: {
            args: Prisma.ApiRequestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApiRequestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApiRequestsCountArgs<ExtArgs>
            result: $Utils.Optional<ApiRequestsCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    users?: UsersOmit
    employers?: EmployersOmit
    foreignWorkers?: ForeignWorkersOmit
    healthChecks?: HealthChecksOmit
    apiRequests?: ApiRequestsOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    CreatedForeignWorkers: number
    UpdatedForeignWorkers: number
    CreatedApiRequests: number
    UpdatedApiRequests: number
    CreatedHealthChecks: number
    UpdatedHealthChecks: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CreatedForeignWorkers?: boolean | UsersCountOutputTypeCountCreatedForeignWorkersArgs
    UpdatedForeignWorkers?: boolean | UsersCountOutputTypeCountUpdatedForeignWorkersArgs
    CreatedApiRequests?: boolean | UsersCountOutputTypeCountCreatedApiRequestsArgs
    UpdatedApiRequests?: boolean | UsersCountOutputTypeCountUpdatedApiRequestsArgs
    CreatedHealthChecks?: boolean | UsersCountOutputTypeCountCreatedHealthChecksArgs
    UpdatedHealthChecks?: boolean | UsersCountOutputTypeCountUpdatedHealthChecksArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCreatedForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForeignWorkersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUpdatedForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForeignWorkersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCreatedApiRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiRequestsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUpdatedApiRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiRequestsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCreatedHealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthChecksWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUpdatedHealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthChecksWhereInput
  }


  /**
   * Count Type EmployersCountOutputType
   */

  export type EmployersCountOutputType = {
    ForeignWorkers: number
  }

  export type EmployersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ForeignWorkers?: boolean | EmployersCountOutputTypeCountForeignWorkersArgs
  }

  // Custom InputTypes
  /**
   * EmployersCountOutputType without action
   */
  export type EmployersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EmployersCountOutputType
     */
    select?: EmployersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EmployersCountOutputType without action
   */
  export type EmployersCountOutputTypeCountForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForeignWorkersWhereInput
  }


  /**
   * Count Type ForeignWorkersCountOutputType
   */

  export type ForeignWorkersCountOutputType = {
    HealthChecks: number
  }

  export type ForeignWorkersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    HealthChecks?: boolean | ForeignWorkersCountOutputTypeCountHealthChecksArgs
  }

  // Custom InputTypes
  /**
   * ForeignWorkersCountOutputType without action
   */
  export type ForeignWorkersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkersCountOutputType
     */
    select?: ForeignWorkersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ForeignWorkersCountOutputType without action
   */
  export type ForeignWorkersCountOutputTypeCountHealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthChecksWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    password: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    username: number
    password: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    username?: true
    password?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    username?: true
    password?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to aggregate.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type UsersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsersWhereInput
    orderBy?: UsersOrderByWithAggregationInput | UsersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: UsersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    username: string
    password: string
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends UsersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type UsersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
    CreatedForeignWorkers?: boolean | Users$CreatedForeignWorkersArgs<ExtArgs>
    UpdatedForeignWorkers?: boolean | Users$UpdatedForeignWorkersArgs<ExtArgs>
    CreatedApiRequests?: boolean | Users$CreatedApiRequestsArgs<ExtArgs>
    UpdatedApiRequests?: boolean | Users$UpdatedApiRequestsArgs<ExtArgs>
    CreatedHealthChecks?: boolean | Users$CreatedHealthChecksArgs<ExtArgs>
    UpdatedHealthChecks?: boolean | Users$UpdatedHealthChecksArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type UsersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    password?: boolean
  }, ExtArgs["result"]["users"]>

  export type UsersSelectScalar = {
    id?: boolean
    username?: boolean
    password?: boolean
  }

  export type UsersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "password", ExtArgs["result"]["users"]>
  export type UsersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CreatedForeignWorkers?: boolean | Users$CreatedForeignWorkersArgs<ExtArgs>
    UpdatedForeignWorkers?: boolean | Users$UpdatedForeignWorkersArgs<ExtArgs>
    CreatedApiRequests?: boolean | Users$CreatedApiRequestsArgs<ExtArgs>
    UpdatedApiRequests?: boolean | Users$UpdatedApiRequestsArgs<ExtArgs>
    CreatedHealthChecks?: boolean | Users$CreatedHealthChecksArgs<ExtArgs>
    UpdatedHealthChecks?: boolean | Users$UpdatedHealthChecksArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UsersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UsersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UsersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Users"
    objects: {
      CreatedForeignWorkers: Prisma.$ForeignWorkersPayload<ExtArgs>[]
      UpdatedForeignWorkers: Prisma.$ForeignWorkersPayload<ExtArgs>[]
      CreatedApiRequests: Prisma.$ApiRequestsPayload<ExtArgs>[]
      UpdatedApiRequests: Prisma.$ApiRequestsPayload<ExtArgs>[]
      CreatedHealthChecks: Prisma.$HealthChecksPayload<ExtArgs>[]
      UpdatedHealthChecks: Prisma.$HealthChecksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      password: string
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type UsersGetPayload<S extends boolean | null | undefined | UsersDefaultArgs> = $Result.GetResult<Prisma.$UsersPayload, S>

  type UsersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UsersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface UsersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Users'], meta: { name: 'Users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {UsersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsersFindUniqueArgs>(args: SelectSubset<T, UsersFindUniqueArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UsersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsersFindUniqueOrThrowArgs>(args: SelectSubset<T, UsersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsersFindFirstArgs>(args?: SelectSubset<T, UsersFindFirstArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsersFindFirstOrThrowArgs>(args?: SelectSubset<T, UsersFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UsersFindManyArgs>(args?: SelectSubset<T, UsersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Users.
     * @param {UsersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends UsersCreateArgs>(args: SelectSubset<T, UsersCreateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {UsersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsersCreateManyArgs>(args?: SelectSubset<T, UsersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UsersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UsersCreateManyAndReturnArgs>(args?: SelectSubset<T, UsersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Users.
     * @param {UsersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends UsersDeleteArgs>(args: SelectSubset<T, UsersDeleteArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Users.
     * @param {UsersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsersUpdateArgs>(args: SelectSubset<T, UsersUpdateArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {UsersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsersDeleteManyArgs>(args?: SelectSubset<T, UsersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsersUpdateManyArgs>(args: SelectSubset<T, UsersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UsersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UsersUpdateManyAndReturnArgs>(args: SelectSubset<T, UsersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Users.
     * @param {UsersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends UsersUpsertArgs>(args: SelectSubset<T, UsersUpsertArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UsersCountArgs>(
      args?: Subset<T, UsersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsersGroupByArgs['orderBy'] }
        : { orderBy?: UsersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Users model
   */
  readonly fields: UsersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    CreatedForeignWorkers<T extends Users$CreatedForeignWorkersArgs<ExtArgs> = {}>(args?: Subset<T, Users$CreatedForeignWorkersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    UpdatedForeignWorkers<T extends Users$UpdatedForeignWorkersArgs<ExtArgs> = {}>(args?: Subset<T, Users$UpdatedForeignWorkersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    CreatedApiRequests<T extends Users$CreatedApiRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Users$CreatedApiRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    UpdatedApiRequests<T extends Users$UpdatedApiRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Users$UpdatedApiRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    CreatedHealthChecks<T extends Users$CreatedHealthChecksArgs<ExtArgs> = {}>(args?: Subset<T, Users$CreatedHealthChecksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    UpdatedHealthChecks<T extends Users$UpdatedHealthChecksArgs<ExtArgs> = {}>(args?: Subset<T, Users$UpdatedHealthChecksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Users model
   */ 
  interface UsersFieldRefs {
    readonly id: FieldRef<"Users", 'Int'>
    readonly username: FieldRef<"Users", 'String'>
    readonly password: FieldRef<"Users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Users findUnique
   */
  export type UsersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findUniqueOrThrow
   */
  export type UsersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users findFirst
   */
  export type UsersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findFirstOrThrow
   */
  export type UsersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users findMany
   */
  export type UsersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UsersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UsersOrderByWithRelationInput | UsersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UsersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * Users create
   */
  export type UsersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to create a Users.
     */
    data: XOR<UsersCreateInput, UsersUncheckedCreateInput>
  }

  /**
   * Users createMany
   */
  export type UsersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users createManyAndReturn
   */
  export type UsersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UsersCreateManyInput | UsersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Users update
   */
  export type UsersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The data needed to update a Users.
     */
    data: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
    /**
     * Choose, which Users to update.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users updateMany
   */
  export type UsersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }

  /**
   * Users updateManyAndReturn
   */
  export type UsersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UsersUpdateManyMutationInput, UsersUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UsersWhereInput
  }

  /**
   * Users upsert
   */
  export type UsersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * The filter to search for the Users to update in case it exists.
     */
    where: UsersWhereUniqueInput
    /**
     * In case the Users found by the `where` argument doesn't exist, create a new Users with this data.
     */
    create: XOR<UsersCreateInput, UsersUncheckedCreateInput>
    /**
     * In case the Users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsersUpdateInput, UsersUncheckedUpdateInput>
  }

  /**
   * Users delete
   */
  export type UsersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    /**
     * Filter which Users to delete.
     */
    where: UsersWhereUniqueInput
  }

  /**
   * Users deleteMany
   */
  export type UsersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UsersWhereInput
  }

  /**
   * Users.CreatedForeignWorkers
   */
  export type Users$CreatedForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    where?: ForeignWorkersWhereInput
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    cursor?: ForeignWorkersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * Users.UpdatedForeignWorkers
   */
  export type Users$UpdatedForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    where?: ForeignWorkersWhereInput
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    cursor?: ForeignWorkersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * Users.CreatedApiRequests
   */
  export type Users$CreatedApiRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    where?: ApiRequestsWhereInput
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    cursor?: ApiRequestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiRequestsScalarFieldEnum | ApiRequestsScalarFieldEnum[]
  }

  /**
   * Users.UpdatedApiRequests
   */
  export type Users$UpdatedApiRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    where?: ApiRequestsWhereInput
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    cursor?: ApiRequestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ApiRequestsScalarFieldEnum | ApiRequestsScalarFieldEnum[]
  }

  /**
   * Users.CreatedHealthChecks
   */
  export type Users$CreatedHealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    where?: HealthChecksWhereInput
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    cursor?: HealthChecksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * Users.UpdatedHealthChecks
   */
  export type Users$UpdatedHealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    where?: HealthChecksWhereInput
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    cursor?: HealthChecksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * Users without action
   */
  export type UsersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
  }


  /**
   * Model Employers
   */

  export type AggregateEmployers = {
    _count: EmployersCountAggregateOutputType | null
    _avg: EmployersAvgAggregateOutputType | null
    _sum: EmployersSumAggregateOutputType | null
    _min: EmployersMinAggregateOutputType | null
    _max: EmployersMaxAggregateOutputType | null
  }

  export type EmployersAvgAggregateOutputType = {
    id: number | null
  }

  export type EmployersSumAggregateOutputType = {
    id: number | null
  }

  export type EmployersMinAggregateOutputType = {
    id: number | null
    empname: string | null
    wkaddress: string | null
    btname: string | null
  }

  export type EmployersMaxAggregateOutputType = {
    id: number | null
    empname: string | null
    wkaddress: string | null
    btname: string | null
  }

  export type EmployersCountAggregateOutputType = {
    id: number
    empname: number
    wkaddress: number
    btname: number
    _all: number
  }


  export type EmployersAvgAggregateInputType = {
    id?: true
  }

  export type EmployersSumAggregateInputType = {
    id?: true
  }

  export type EmployersMinAggregateInputType = {
    id?: true
    empname?: true
    wkaddress?: true
    btname?: true
  }

  export type EmployersMaxAggregateInputType = {
    id?: true
    empname?: true
    wkaddress?: true
    btname?: true
  }

  export type EmployersCountAggregateInputType = {
    id?: true
    empname?: true
    wkaddress?: true
    btname?: true
    _all?: true
  }

  export type EmployersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employers to aggregate.
     */
    where?: EmployersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployersOrderByWithRelationInput | EmployersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EmployersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Employers
    **/
    _count?: true | EmployersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EmployersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EmployersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployersMaxAggregateInputType
  }

  export type GetEmployersAggregateType<T extends EmployersAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployers[P]>
      : GetScalarType<T[P], AggregateEmployers[P]>
  }




  export type EmployersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EmployersWhereInput
    orderBy?: EmployersOrderByWithAggregationInput | EmployersOrderByWithAggregationInput[]
    by: EmployersScalarFieldEnum[] | EmployersScalarFieldEnum
    having?: EmployersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployersCountAggregateInputType | true
    _avg?: EmployersAvgAggregateInputType
    _sum?: EmployersSumAggregateInputType
    _min?: EmployersMinAggregateInputType
    _max?: EmployersMaxAggregateInputType
  }

  export type EmployersGroupByOutputType = {
    id: number
    empname: string
    wkaddress: string | null
    btname: string | null
    _count: EmployersCountAggregateOutputType | null
    _avg: EmployersAvgAggregateOutputType | null
    _sum: EmployersSumAggregateOutputType | null
    _min: EmployersMinAggregateOutputType | null
    _max: EmployersMaxAggregateOutputType | null
  }

  type GetEmployersGroupByPayload<T extends EmployersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployersGroupByOutputType[P]>
            : GetScalarType<T[P], EmployersGroupByOutputType[P]>
        }
      >
    >


  export type EmployersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empname?: boolean
    wkaddress?: boolean
    btname?: boolean
    ForeignWorkers?: boolean | Employers$ForeignWorkersArgs<ExtArgs>
    _count?: boolean | EmployersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employers"]>

  export type EmployersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empname?: boolean
    wkaddress?: boolean
    btname?: boolean
  }, ExtArgs["result"]["employers"]>

  export type EmployersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    empname?: boolean
    wkaddress?: boolean
    btname?: boolean
  }, ExtArgs["result"]["employers"]>

  export type EmployersSelectScalar = {
    id?: boolean
    empname?: boolean
    wkaddress?: boolean
    btname?: boolean
  }

  export type EmployersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "empname" | "wkaddress" | "btname", ExtArgs["result"]["employers"]>
  export type EmployersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ForeignWorkers?: boolean | Employers$ForeignWorkersArgs<ExtArgs>
    _count?: boolean | EmployersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EmployersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type EmployersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $EmployersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Employers"
    objects: {
      ForeignWorkers: Prisma.$ForeignWorkersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      empname: string
      wkaddress: string | null
      btname: string | null
    }, ExtArgs["result"]["employers"]>
    composites: {}
  }

  type EmployersGetPayload<S extends boolean | null | undefined | EmployersDefaultArgs> = $Result.GetResult<Prisma.$EmployersPayload, S>

  type EmployersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EmployersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployersCountAggregateInputType | true
    }

  export interface EmployersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Employers'], meta: { name: 'Employers' } }
    /**
     * Find zero or one Employers that matches the filter.
     * @param {EmployersFindUniqueArgs} args - Arguments to find a Employers
     * @example
     * // Get one Employers
     * const employers = await prisma.employers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EmployersFindUniqueArgs>(args: SelectSubset<T, EmployersFindUniqueArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Employers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EmployersFindUniqueOrThrowArgs} args - Arguments to find a Employers
     * @example
     * // Get one Employers
     * const employers = await prisma.employers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EmployersFindUniqueOrThrowArgs>(args: SelectSubset<T, EmployersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Employers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersFindFirstArgs} args - Arguments to find a Employers
     * @example
     * // Get one Employers
     * const employers = await prisma.employers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EmployersFindFirstArgs>(args?: SelectSubset<T, EmployersFindFirstArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Employers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersFindFirstOrThrowArgs} args - Arguments to find a Employers
     * @example
     * // Get one Employers
     * const employers = await prisma.employers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EmployersFindFirstOrThrowArgs>(args?: SelectSubset<T, EmployersFindFirstOrThrowArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Employers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employers
     * const employers = await prisma.employers.findMany()
     * 
     * // Get first 10 Employers
     * const employers = await prisma.employers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employersWithIdOnly = await prisma.employers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EmployersFindManyArgs>(args?: SelectSubset<T, EmployersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Employers.
     * @param {EmployersCreateArgs} args - Arguments to create a Employers.
     * @example
     * // Create one Employers
     * const Employers = await prisma.employers.create({
     *   data: {
     *     // ... data to create a Employers
     *   }
     * })
     * 
     */
    create<T extends EmployersCreateArgs>(args: SelectSubset<T, EmployersCreateArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Employers.
     * @param {EmployersCreateManyArgs} args - Arguments to create many Employers.
     * @example
     * // Create many Employers
     * const employers = await prisma.employers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EmployersCreateManyArgs>(args?: SelectSubset<T, EmployersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employers and returns the data saved in the database.
     * @param {EmployersCreateManyAndReturnArgs} args - Arguments to create many Employers.
     * @example
     * // Create many Employers
     * const employers = await prisma.employers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employers and only return the `id`
     * const employersWithIdOnly = await prisma.employers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EmployersCreateManyAndReturnArgs>(args?: SelectSubset<T, EmployersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Employers.
     * @param {EmployersDeleteArgs} args - Arguments to delete one Employers.
     * @example
     * // Delete one Employers
     * const Employers = await prisma.employers.delete({
     *   where: {
     *     // ... filter to delete one Employers
     *   }
     * })
     * 
     */
    delete<T extends EmployersDeleteArgs>(args: SelectSubset<T, EmployersDeleteArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Employers.
     * @param {EmployersUpdateArgs} args - Arguments to update one Employers.
     * @example
     * // Update one Employers
     * const employers = await prisma.employers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EmployersUpdateArgs>(args: SelectSubset<T, EmployersUpdateArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Employers.
     * @param {EmployersDeleteManyArgs} args - Arguments to filter Employers to delete.
     * @example
     * // Delete a few Employers
     * const { count } = await prisma.employers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EmployersDeleteManyArgs>(args?: SelectSubset<T, EmployersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employers
     * const employers = await prisma.employers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EmployersUpdateManyArgs>(args: SelectSubset<T, EmployersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employers and returns the data updated in the database.
     * @param {EmployersUpdateManyAndReturnArgs} args - Arguments to update many Employers.
     * @example
     * // Update many Employers
     * const employers = await prisma.employers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employers and only return the `id`
     * const employersWithIdOnly = await prisma.employers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EmployersUpdateManyAndReturnArgs>(args: SelectSubset<T, EmployersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Employers.
     * @param {EmployersUpsertArgs} args - Arguments to update or create a Employers.
     * @example
     * // Update or create a Employers
     * const employers = await prisma.employers.upsert({
     *   create: {
     *     // ... data to create a Employers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employers we want to update
     *   }
     * })
     */
    upsert<T extends EmployersUpsertArgs>(args: SelectSubset<T, EmployersUpsertArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersCountArgs} args - Arguments to filter Employers to count.
     * @example
     * // Count the number of Employers
     * const count = await prisma.employers.count({
     *   where: {
     *     // ... the filter for the Employers we want to count
     *   }
     * })
    **/
    count<T extends EmployersCountArgs>(
      args?: Subset<T, EmployersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployersAggregateArgs>(args: Subset<T, EmployersAggregateArgs>): Prisma.PrismaPromise<GetEmployersAggregateType<T>>

    /**
     * Group by Employers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EmployersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EmployersGroupByArgs['orderBy'] }
        : { orderBy?: EmployersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EmployersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Employers model
   */
  readonly fields: EmployersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Employers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EmployersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ForeignWorkers<T extends Employers$ForeignWorkersArgs<ExtArgs> = {}>(args?: Subset<T, Employers$ForeignWorkersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Employers model
   */ 
  interface EmployersFieldRefs {
    readonly id: FieldRef<"Employers", 'Int'>
    readonly empname: FieldRef<"Employers", 'String'>
    readonly wkaddress: FieldRef<"Employers", 'String'>
    readonly btname: FieldRef<"Employers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Employers findUnique
   */
  export type EmployersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where: EmployersWhereUniqueInput
  }

  /**
   * Employers findUniqueOrThrow
   */
  export type EmployersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where: EmployersWhereUniqueInput
  }

  /**
   * Employers findFirst
   */
  export type EmployersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where?: EmployersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployersOrderByWithRelationInput | EmployersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employers.
     */
    cursor?: EmployersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employers.
     */
    distinct?: EmployersScalarFieldEnum | EmployersScalarFieldEnum[]
  }

  /**
   * Employers findFirstOrThrow
   */
  export type EmployersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where?: EmployersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployersOrderByWithRelationInput | EmployersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Employers.
     */
    cursor?: EmployersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Employers.
     */
    distinct?: EmployersScalarFieldEnum | EmployersScalarFieldEnum[]
  }

  /**
   * Employers findMany
   */
  export type EmployersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter, which Employers to fetch.
     */
    where?: EmployersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Employers to fetch.
     */
    orderBy?: EmployersOrderByWithRelationInput | EmployersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Employers.
     */
    cursor?: EmployersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Employers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Employers.
     */
    skip?: number
    distinct?: EmployersScalarFieldEnum | EmployersScalarFieldEnum[]
  }

  /**
   * Employers create
   */
  export type EmployersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * The data needed to create a Employers.
     */
    data: XOR<EmployersCreateInput, EmployersUncheckedCreateInput>
  }

  /**
   * Employers createMany
   */
  export type EmployersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Employers.
     */
    data: EmployersCreateManyInput | EmployersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Employers createManyAndReturn
   */
  export type EmployersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * The data used to create many Employers.
     */
    data: EmployersCreateManyInput | EmployersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Employers update
   */
  export type EmployersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * The data needed to update a Employers.
     */
    data: XOR<EmployersUpdateInput, EmployersUncheckedUpdateInput>
    /**
     * Choose, which Employers to update.
     */
    where: EmployersWhereUniqueInput
  }

  /**
   * Employers updateMany
   */
  export type EmployersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Employers.
     */
    data: XOR<EmployersUpdateManyMutationInput, EmployersUncheckedUpdateManyInput>
    /**
     * Filter which Employers to update
     */
    where?: EmployersWhereInput
  }

  /**
   * Employers updateManyAndReturn
   */
  export type EmployersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * The data used to update Employers.
     */
    data: XOR<EmployersUpdateManyMutationInput, EmployersUncheckedUpdateManyInput>
    /**
     * Filter which Employers to update
     */
    where?: EmployersWhereInput
  }

  /**
   * Employers upsert
   */
  export type EmployersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * The filter to search for the Employers to update in case it exists.
     */
    where: EmployersWhereUniqueInput
    /**
     * In case the Employers found by the `where` argument doesn't exist, create a new Employers with this data.
     */
    create: XOR<EmployersCreateInput, EmployersUncheckedCreateInput>
    /**
     * In case the Employers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EmployersUpdateInput, EmployersUncheckedUpdateInput>
  }

  /**
   * Employers delete
   */
  export type EmployersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
    /**
     * Filter which Employers to delete.
     */
    where: EmployersWhereUniqueInput
  }

  /**
   * Employers deleteMany
   */
  export type EmployersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Employers to delete
     */
    where?: EmployersWhereInput
  }

  /**
   * Employers.ForeignWorkers
   */
  export type Employers$ForeignWorkersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    where?: ForeignWorkersWhereInput
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    cursor?: ForeignWorkersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * Employers without action
   */
  export type EmployersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Employers
     */
    select?: EmployersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Employers
     */
    omit?: EmployersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EmployersInclude<ExtArgs> | null
  }


  /**
   * Model ForeignWorkers
   */

  export type AggregateForeignWorkers = {
    _count: ForeignWorkersCountAggregateOutputType | null
    _avg: ForeignWorkersAvgAggregateOutputType | null
    _sum: ForeignWorkersSumAggregateOutputType | null
    _min: ForeignWorkersMinAggregateOutputType | null
    _max: ForeignWorkersMaxAggregateOutputType | null
  }

  export type ForeignWorkersAvgAggregateOutputType = {
    id: number | null
    employer_id: number | null
    altype: number | null
    alprefix: number | null
    algender: number | null
    alposid: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type ForeignWorkersSumAggregateOutputType = {
    id: number | null
    employer_id: number | null
    altype: number | null
    alprefix: number | null
    algender: number | null
    alposid: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type ForeignWorkersMinAggregateOutputType = {
    id: number | null
    employer_id: number | null
    alcode: string | null
    altype: number | null
    alprefix: number | null
    alprefixen: string | null
    alname_en: string | null
    alsname_en: string | null
    alprefix_th: string | null
    alname_th: string | null
    alsname_th: string | null
    albdate: Date | null
    algender: number | null
    alnation: string | null
    alposid: number | null
    blood_group: string | null
    nickname: string | null
    religion: string | null
    phone_number: string | null
    email: string | null
    address: string | null
    subdistrict: string | null
    district: string | null
    province: string | null
    postal_code: string | null
    remark: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type ForeignWorkersMaxAggregateOutputType = {
    id: number | null
    employer_id: number | null
    alcode: string | null
    altype: number | null
    alprefix: number | null
    alprefixen: string | null
    alname_en: string | null
    alsname_en: string | null
    alprefix_th: string | null
    alname_th: string | null
    alsname_th: string | null
    albdate: Date | null
    algender: number | null
    alnation: string | null
    alposid: number | null
    blood_group: string | null
    nickname: string | null
    religion: string | null
    phone_number: string | null
    email: string | null
    address: string | null
    subdistrict: string | null
    district: string | null
    province: string | null
    postal_code: string | null
    remark: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type ForeignWorkersCountAggregateOutputType = {
    id: number
    employer_id: number
    alcode: number
    altype: number
    alprefix: number
    alprefixen: number
    alname_en: number
    alsname_en: number
    alprefix_th: number
    alname_th: number
    alsname_th: number
    albdate: number
    algender: number
    alnation: number
    alposid: number
    blood_group: number
    nickname: number
    religion: number
    phone_number: number
    email: number
    address: number
    subdistrict: number
    district: number
    province: number
    postal_code: number
    remark: number
    isDelete: number
    createdBy: number
    createdOn: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type ForeignWorkersAvgAggregateInputType = {
    id?: true
    employer_id?: true
    altype?: true
    alprefix?: true
    algender?: true
    alposid?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ForeignWorkersSumAggregateInputType = {
    id?: true
    employer_id?: true
    altype?: true
    alprefix?: true
    algender?: true
    alposid?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ForeignWorkersMinAggregateInputType = {
    id?: true
    employer_id?: true
    alcode?: true
    altype?: true
    alprefix?: true
    alprefixen?: true
    alname_en?: true
    alsname_en?: true
    alprefix_th?: true
    alname_th?: true
    alsname_th?: true
    albdate?: true
    algender?: true
    alnation?: true
    alposid?: true
    blood_group?: true
    nickname?: true
    religion?: true
    phone_number?: true
    email?: true
    address?: true
    subdistrict?: true
    district?: true
    province?: true
    postal_code?: true
    remark?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type ForeignWorkersMaxAggregateInputType = {
    id?: true
    employer_id?: true
    alcode?: true
    altype?: true
    alprefix?: true
    alprefixen?: true
    alname_en?: true
    alsname_en?: true
    alprefix_th?: true
    alname_th?: true
    alsname_th?: true
    albdate?: true
    algender?: true
    alnation?: true
    alposid?: true
    blood_group?: true
    nickname?: true
    religion?: true
    phone_number?: true
    email?: true
    address?: true
    subdistrict?: true
    district?: true
    province?: true
    postal_code?: true
    remark?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type ForeignWorkersCountAggregateInputType = {
    id?: true
    employer_id?: true
    alcode?: true
    altype?: true
    alprefix?: true
    alprefixen?: true
    alname_en?: true
    alsname_en?: true
    alprefix_th?: true
    alname_th?: true
    alsname_th?: true
    albdate?: true
    algender?: true
    alnation?: true
    alposid?: true
    blood_group?: true
    nickname?: true
    religion?: true
    phone_number?: true
    email?: true
    address?: true
    subdistrict?: true
    district?: true
    province?: true
    postal_code?: true
    remark?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type ForeignWorkersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ForeignWorkers to aggregate.
     */
    where?: ForeignWorkersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ForeignWorkers to fetch.
     */
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ForeignWorkersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForeignWorkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForeignWorkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ForeignWorkers
    **/
    _count?: true | ForeignWorkersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ForeignWorkersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ForeignWorkersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ForeignWorkersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ForeignWorkersMaxAggregateInputType
  }

  export type GetForeignWorkersAggregateType<T extends ForeignWorkersAggregateArgs> = {
        [P in keyof T & keyof AggregateForeignWorkers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateForeignWorkers[P]>
      : GetScalarType<T[P], AggregateForeignWorkers[P]>
  }




  export type ForeignWorkersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ForeignWorkersWhereInput
    orderBy?: ForeignWorkersOrderByWithAggregationInput | ForeignWorkersOrderByWithAggregationInput[]
    by: ForeignWorkersScalarFieldEnum[] | ForeignWorkersScalarFieldEnum
    having?: ForeignWorkersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ForeignWorkersCountAggregateInputType | true
    _avg?: ForeignWorkersAvgAggregateInputType
    _sum?: ForeignWorkersSumAggregateInputType
    _min?: ForeignWorkersMinAggregateInputType
    _max?: ForeignWorkersMaxAggregateInputType
  }

  export type ForeignWorkersGroupByOutputType = {
    id: number
    employer_id: number
    alcode: string
    altype: number | null
    alprefix: number | null
    alprefixen: string | null
    alname_en: string
    alsname_en: string | null
    alprefix_th: string | null
    alname_th: string | null
    alsname_th: string | null
    albdate: Date | null
    algender: number | null
    alnation: string | null
    alposid: number | null
    blood_group: string | null
    nickname: string | null
    religion: string | null
    phone_number: string | null
    email: string | null
    address: string | null
    subdistrict: string | null
    district: string | null
    province: string | null
    postal_code: string | null
    remark: string | null
    isDelete: boolean
    createdBy: number | null
    createdOn: Date
    updatedBy: number | null
    updatedOn: Date | null
    _count: ForeignWorkersCountAggregateOutputType | null
    _avg: ForeignWorkersAvgAggregateOutputType | null
    _sum: ForeignWorkersSumAggregateOutputType | null
    _min: ForeignWorkersMinAggregateOutputType | null
    _max: ForeignWorkersMaxAggregateOutputType | null
  }

  type GetForeignWorkersGroupByPayload<T extends ForeignWorkersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ForeignWorkersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ForeignWorkersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ForeignWorkersGroupByOutputType[P]>
            : GetScalarType<T[P], ForeignWorkersGroupByOutputType[P]>
        }
      >
    >


  export type ForeignWorkersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employer_id?: boolean
    alcode?: boolean
    altype?: boolean
    alprefix?: boolean
    alprefixen?: boolean
    alname_en?: boolean
    alsname_en?: boolean
    alprefix_th?: boolean
    alname_th?: boolean
    alsname_th?: boolean
    albdate?: boolean
    algender?: boolean
    alnation?: boolean
    alposid?: boolean
    blood_group?: boolean
    nickname?: boolean
    religion?: boolean
    phone_number?: boolean
    email?: boolean
    address?: boolean
    subdistrict?: boolean
    district?: boolean
    province?: boolean
    postal_code?: boolean
    remark?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    HealthChecks?: boolean | ForeignWorkers$HealthChecksArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
    _count?: boolean | ForeignWorkersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["foreignWorkers"]>

  export type ForeignWorkersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employer_id?: boolean
    alcode?: boolean
    altype?: boolean
    alprefix?: boolean
    alprefixen?: boolean
    alname_en?: boolean
    alsname_en?: boolean
    alprefix_th?: boolean
    alname_th?: boolean
    alsname_th?: boolean
    albdate?: boolean
    algender?: boolean
    alnation?: boolean
    alposid?: boolean
    blood_group?: boolean
    nickname?: boolean
    religion?: boolean
    phone_number?: boolean
    email?: boolean
    address?: boolean
    subdistrict?: boolean
    district?: boolean
    province?: boolean
    postal_code?: boolean
    remark?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["foreignWorkers"]>

  export type ForeignWorkersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employer_id?: boolean
    alcode?: boolean
    altype?: boolean
    alprefix?: boolean
    alprefixen?: boolean
    alname_en?: boolean
    alsname_en?: boolean
    alprefix_th?: boolean
    alname_th?: boolean
    alsname_th?: boolean
    albdate?: boolean
    algender?: boolean
    alnation?: boolean
    alposid?: boolean
    blood_group?: boolean
    nickname?: boolean
    religion?: boolean
    phone_number?: boolean
    email?: boolean
    address?: boolean
    subdistrict?: boolean
    district?: boolean
    province?: boolean
    postal_code?: boolean
    remark?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["foreignWorkers"]>

  export type ForeignWorkersSelectScalar = {
    id?: boolean
    employer_id?: boolean
    alcode?: boolean
    altype?: boolean
    alprefix?: boolean
    alprefixen?: boolean
    alname_en?: boolean
    alsname_en?: boolean
    alprefix_th?: boolean
    alname_th?: boolean
    alsname_th?: boolean
    albdate?: boolean
    algender?: boolean
    alnation?: boolean
    alposid?: boolean
    blood_group?: boolean
    nickname?: boolean
    religion?: boolean
    phone_number?: boolean
    email?: boolean
    address?: boolean
    subdistrict?: boolean
    district?: boolean
    province?: boolean
    postal_code?: boolean
    remark?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type ForeignWorkersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employer_id" | "alcode" | "altype" | "alprefix" | "alprefixen" | "alname_en" | "alsname_en" | "alprefix_th" | "alname_th" | "alsname_th" | "albdate" | "algender" | "alnation" | "alposid" | "blood_group" | "nickname" | "religion" | "phone_number" | "email" | "address" | "subdistrict" | "district" | "province" | "postal_code" | "remark" | "isDelete" | "createdBy" | "createdOn" | "updatedBy" | "updatedOn", ExtArgs["result"]["foreignWorkers"]>
  export type ForeignWorkersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    HealthChecks?: boolean | ForeignWorkers$HealthChecksArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
    _count?: boolean | ForeignWorkersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ForeignWorkersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
  }
  export type ForeignWorkersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Employers?: boolean | EmployersDefaultArgs<ExtArgs>
    createdByUser?: boolean | ForeignWorkers$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ForeignWorkers$updatedByUserArgs<ExtArgs>
  }

  export type $ForeignWorkersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ForeignWorkers"
    objects: {
      Employers: Prisma.$EmployersPayload<ExtArgs>
      HealthChecks: Prisma.$HealthChecksPayload<ExtArgs>[]
      createdByUser: Prisma.$UsersPayload<ExtArgs> | null
      updatedByUser: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      employer_id: number
      alcode: string
      altype: number | null
      alprefix: number | null
      alprefixen: string | null
      alname_en: string
      alsname_en: string | null
      alprefix_th: string | null
      alname_th: string | null
      alsname_th: string | null
      albdate: Date | null
      algender: number | null
      alnation: string | null
      alposid: number | null
      blood_group: string | null
      nickname: string | null
      religion: string | null
      phone_number: string | null
      email: string | null
      address: string | null
      subdistrict: string | null
      district: string | null
      province: string | null
      postal_code: string | null
      remark: string | null
      isDelete: boolean
      createdBy: number | null
      createdOn: Date
      updatedBy: number | null
      updatedOn: Date | null
    }, ExtArgs["result"]["foreignWorkers"]>
    composites: {}
  }

  type ForeignWorkersGetPayload<S extends boolean | null | undefined | ForeignWorkersDefaultArgs> = $Result.GetResult<Prisma.$ForeignWorkersPayload, S>

  type ForeignWorkersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ForeignWorkersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ForeignWorkersCountAggregateInputType | true
    }

  export interface ForeignWorkersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ForeignWorkers'], meta: { name: 'ForeignWorkers' } }
    /**
     * Find zero or one ForeignWorkers that matches the filter.
     * @param {ForeignWorkersFindUniqueArgs} args - Arguments to find a ForeignWorkers
     * @example
     * // Get one ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ForeignWorkersFindUniqueArgs>(args: SelectSubset<T, ForeignWorkersFindUniqueArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ForeignWorkers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ForeignWorkersFindUniqueOrThrowArgs} args - Arguments to find a ForeignWorkers
     * @example
     * // Get one ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ForeignWorkersFindUniqueOrThrowArgs>(args: SelectSubset<T, ForeignWorkersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ForeignWorkers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersFindFirstArgs} args - Arguments to find a ForeignWorkers
     * @example
     * // Get one ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ForeignWorkersFindFirstArgs>(args?: SelectSubset<T, ForeignWorkersFindFirstArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ForeignWorkers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersFindFirstOrThrowArgs} args - Arguments to find a ForeignWorkers
     * @example
     * // Get one ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ForeignWorkersFindFirstOrThrowArgs>(args?: SelectSubset<T, ForeignWorkersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ForeignWorkers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findMany()
     * 
     * // Get first 10 ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const foreignWorkersWithIdOnly = await prisma.foreignWorkers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ForeignWorkersFindManyArgs>(args?: SelectSubset<T, ForeignWorkersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ForeignWorkers.
     * @param {ForeignWorkersCreateArgs} args - Arguments to create a ForeignWorkers.
     * @example
     * // Create one ForeignWorkers
     * const ForeignWorkers = await prisma.foreignWorkers.create({
     *   data: {
     *     // ... data to create a ForeignWorkers
     *   }
     * })
     * 
     */
    create<T extends ForeignWorkersCreateArgs>(args: SelectSubset<T, ForeignWorkersCreateArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ForeignWorkers.
     * @param {ForeignWorkersCreateManyArgs} args - Arguments to create many ForeignWorkers.
     * @example
     * // Create many ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ForeignWorkersCreateManyArgs>(args?: SelectSubset<T, ForeignWorkersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ForeignWorkers and returns the data saved in the database.
     * @param {ForeignWorkersCreateManyAndReturnArgs} args - Arguments to create many ForeignWorkers.
     * @example
     * // Create many ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ForeignWorkers and only return the `id`
     * const foreignWorkersWithIdOnly = await prisma.foreignWorkers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ForeignWorkersCreateManyAndReturnArgs>(args?: SelectSubset<T, ForeignWorkersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ForeignWorkers.
     * @param {ForeignWorkersDeleteArgs} args - Arguments to delete one ForeignWorkers.
     * @example
     * // Delete one ForeignWorkers
     * const ForeignWorkers = await prisma.foreignWorkers.delete({
     *   where: {
     *     // ... filter to delete one ForeignWorkers
     *   }
     * })
     * 
     */
    delete<T extends ForeignWorkersDeleteArgs>(args: SelectSubset<T, ForeignWorkersDeleteArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ForeignWorkers.
     * @param {ForeignWorkersUpdateArgs} args - Arguments to update one ForeignWorkers.
     * @example
     * // Update one ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ForeignWorkersUpdateArgs>(args: SelectSubset<T, ForeignWorkersUpdateArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ForeignWorkers.
     * @param {ForeignWorkersDeleteManyArgs} args - Arguments to filter ForeignWorkers to delete.
     * @example
     * // Delete a few ForeignWorkers
     * const { count } = await prisma.foreignWorkers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ForeignWorkersDeleteManyArgs>(args?: SelectSubset<T, ForeignWorkersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ForeignWorkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ForeignWorkersUpdateManyArgs>(args: SelectSubset<T, ForeignWorkersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ForeignWorkers and returns the data updated in the database.
     * @param {ForeignWorkersUpdateManyAndReturnArgs} args - Arguments to update many ForeignWorkers.
     * @example
     * // Update many ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ForeignWorkers and only return the `id`
     * const foreignWorkersWithIdOnly = await prisma.foreignWorkers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ForeignWorkersUpdateManyAndReturnArgs>(args: SelectSubset<T, ForeignWorkersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ForeignWorkers.
     * @param {ForeignWorkersUpsertArgs} args - Arguments to update or create a ForeignWorkers.
     * @example
     * // Update or create a ForeignWorkers
     * const foreignWorkers = await prisma.foreignWorkers.upsert({
     *   create: {
     *     // ... data to create a ForeignWorkers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ForeignWorkers we want to update
     *   }
     * })
     */
    upsert<T extends ForeignWorkersUpsertArgs>(args: SelectSubset<T, ForeignWorkersUpsertArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ForeignWorkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersCountArgs} args - Arguments to filter ForeignWorkers to count.
     * @example
     * // Count the number of ForeignWorkers
     * const count = await prisma.foreignWorkers.count({
     *   where: {
     *     // ... the filter for the ForeignWorkers we want to count
     *   }
     * })
    **/
    count<T extends ForeignWorkersCountArgs>(
      args?: Subset<T, ForeignWorkersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ForeignWorkersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ForeignWorkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ForeignWorkersAggregateArgs>(args: Subset<T, ForeignWorkersAggregateArgs>): Prisma.PrismaPromise<GetForeignWorkersAggregateType<T>>

    /**
     * Group by ForeignWorkers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ForeignWorkersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ForeignWorkersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ForeignWorkersGroupByArgs['orderBy'] }
        : { orderBy?: ForeignWorkersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ForeignWorkersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetForeignWorkersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ForeignWorkers model
   */
  readonly fields: ForeignWorkersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ForeignWorkers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ForeignWorkersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Employers<T extends EmployersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EmployersDefaultArgs<ExtArgs>>): Prisma__EmployersClient<$Result.GetResult<Prisma.$EmployersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    HealthChecks<T extends ForeignWorkers$HealthChecksArgs<ExtArgs> = {}>(args?: Subset<T, ForeignWorkers$HealthChecksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    createdByUser<T extends ForeignWorkers$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, ForeignWorkers$createdByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends ForeignWorkers$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, ForeignWorkers$updatedByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ForeignWorkers model
   */ 
  interface ForeignWorkersFieldRefs {
    readonly id: FieldRef<"ForeignWorkers", 'Int'>
    readonly employer_id: FieldRef<"ForeignWorkers", 'Int'>
    readonly alcode: FieldRef<"ForeignWorkers", 'String'>
    readonly altype: FieldRef<"ForeignWorkers", 'Int'>
    readonly alprefix: FieldRef<"ForeignWorkers", 'Int'>
    readonly alprefixen: FieldRef<"ForeignWorkers", 'String'>
    readonly alname_en: FieldRef<"ForeignWorkers", 'String'>
    readonly alsname_en: FieldRef<"ForeignWorkers", 'String'>
    readonly alprefix_th: FieldRef<"ForeignWorkers", 'String'>
    readonly alname_th: FieldRef<"ForeignWorkers", 'String'>
    readonly alsname_th: FieldRef<"ForeignWorkers", 'String'>
    readonly albdate: FieldRef<"ForeignWorkers", 'DateTime'>
    readonly algender: FieldRef<"ForeignWorkers", 'Int'>
    readonly alnation: FieldRef<"ForeignWorkers", 'String'>
    readonly alposid: FieldRef<"ForeignWorkers", 'Int'>
    readonly blood_group: FieldRef<"ForeignWorkers", 'String'>
    readonly nickname: FieldRef<"ForeignWorkers", 'String'>
    readonly religion: FieldRef<"ForeignWorkers", 'String'>
    readonly phone_number: FieldRef<"ForeignWorkers", 'String'>
    readonly email: FieldRef<"ForeignWorkers", 'String'>
    readonly address: FieldRef<"ForeignWorkers", 'String'>
    readonly subdistrict: FieldRef<"ForeignWorkers", 'String'>
    readonly district: FieldRef<"ForeignWorkers", 'String'>
    readonly province: FieldRef<"ForeignWorkers", 'String'>
    readonly postal_code: FieldRef<"ForeignWorkers", 'String'>
    readonly remark: FieldRef<"ForeignWorkers", 'String'>
    readonly isDelete: FieldRef<"ForeignWorkers", 'Boolean'>
    readonly createdBy: FieldRef<"ForeignWorkers", 'Int'>
    readonly createdOn: FieldRef<"ForeignWorkers", 'DateTime'>
    readonly updatedBy: FieldRef<"ForeignWorkers", 'Int'>
    readonly updatedOn: FieldRef<"ForeignWorkers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ForeignWorkers findUnique
   */
  export type ForeignWorkersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter, which ForeignWorkers to fetch.
     */
    where: ForeignWorkersWhereUniqueInput
  }

  /**
   * ForeignWorkers findUniqueOrThrow
   */
  export type ForeignWorkersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter, which ForeignWorkers to fetch.
     */
    where: ForeignWorkersWhereUniqueInput
  }

  /**
   * ForeignWorkers findFirst
   */
  export type ForeignWorkersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter, which ForeignWorkers to fetch.
     */
    where?: ForeignWorkersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ForeignWorkers to fetch.
     */
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ForeignWorkers.
     */
    cursor?: ForeignWorkersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForeignWorkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForeignWorkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ForeignWorkers.
     */
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * ForeignWorkers findFirstOrThrow
   */
  export type ForeignWorkersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter, which ForeignWorkers to fetch.
     */
    where?: ForeignWorkersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ForeignWorkers to fetch.
     */
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ForeignWorkers.
     */
    cursor?: ForeignWorkersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForeignWorkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForeignWorkers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ForeignWorkers.
     */
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * ForeignWorkers findMany
   */
  export type ForeignWorkersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter, which ForeignWorkers to fetch.
     */
    where?: ForeignWorkersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ForeignWorkers to fetch.
     */
    orderBy?: ForeignWorkersOrderByWithRelationInput | ForeignWorkersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ForeignWorkers.
     */
    cursor?: ForeignWorkersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ForeignWorkers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ForeignWorkers.
     */
    skip?: number
    distinct?: ForeignWorkersScalarFieldEnum | ForeignWorkersScalarFieldEnum[]
  }

  /**
   * ForeignWorkers create
   */
  export type ForeignWorkersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * The data needed to create a ForeignWorkers.
     */
    data: XOR<ForeignWorkersCreateInput, ForeignWorkersUncheckedCreateInput>
  }

  /**
   * ForeignWorkers createMany
   */
  export type ForeignWorkersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ForeignWorkers.
     */
    data: ForeignWorkersCreateManyInput | ForeignWorkersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ForeignWorkers createManyAndReturn
   */
  export type ForeignWorkersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * The data used to create many ForeignWorkers.
     */
    data: ForeignWorkersCreateManyInput | ForeignWorkersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ForeignWorkers update
   */
  export type ForeignWorkersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * The data needed to update a ForeignWorkers.
     */
    data: XOR<ForeignWorkersUpdateInput, ForeignWorkersUncheckedUpdateInput>
    /**
     * Choose, which ForeignWorkers to update.
     */
    where: ForeignWorkersWhereUniqueInput
  }

  /**
   * ForeignWorkers updateMany
   */
  export type ForeignWorkersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ForeignWorkers.
     */
    data: XOR<ForeignWorkersUpdateManyMutationInput, ForeignWorkersUncheckedUpdateManyInput>
    /**
     * Filter which ForeignWorkers to update
     */
    where?: ForeignWorkersWhereInput
  }

  /**
   * ForeignWorkers updateManyAndReturn
   */
  export type ForeignWorkersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * The data used to update ForeignWorkers.
     */
    data: XOR<ForeignWorkersUpdateManyMutationInput, ForeignWorkersUncheckedUpdateManyInput>
    /**
     * Filter which ForeignWorkers to update
     */
    where?: ForeignWorkersWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ForeignWorkers upsert
   */
  export type ForeignWorkersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * The filter to search for the ForeignWorkers to update in case it exists.
     */
    where: ForeignWorkersWhereUniqueInput
    /**
     * In case the ForeignWorkers found by the `where` argument doesn't exist, create a new ForeignWorkers with this data.
     */
    create: XOR<ForeignWorkersCreateInput, ForeignWorkersUncheckedCreateInput>
    /**
     * In case the ForeignWorkers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ForeignWorkersUpdateInput, ForeignWorkersUncheckedUpdateInput>
  }

  /**
   * ForeignWorkers delete
   */
  export type ForeignWorkersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
    /**
     * Filter which ForeignWorkers to delete.
     */
    where: ForeignWorkersWhereUniqueInput
  }

  /**
   * ForeignWorkers deleteMany
   */
  export type ForeignWorkersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ForeignWorkers to delete
     */
    where?: ForeignWorkersWhereInput
  }

  /**
   * ForeignWorkers.HealthChecks
   */
  export type ForeignWorkers$HealthChecksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    where?: HealthChecksWhereInput
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    cursor?: HealthChecksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * ForeignWorkers.createdByUser
   */
  export type ForeignWorkers$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ForeignWorkers.updatedByUser
   */
  export type ForeignWorkers$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ForeignWorkers without action
   */
  export type ForeignWorkersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ForeignWorkers
     */
    select?: ForeignWorkersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ForeignWorkers
     */
    omit?: ForeignWorkersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ForeignWorkersInclude<ExtArgs> | null
  }


  /**
   * Model HealthChecks
   */

  export type AggregateHealthChecks = {
    _count: HealthChecksCountAggregateOutputType | null
    _avg: HealthChecksAvgAggregateOutputType | null
    _sum: HealthChecksSumAggregateOutputType | null
    _min: HealthChecksMinAggregateOutputType | null
    _max: HealthChecksMaxAggregateOutputType | null
  }

  export type HealthChecksAvgAggregateOutputType = {
    id: number | null
    alchkstatus: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type HealthChecksSumAggregateOutputType = {
    id: number | null
    alchkstatus: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type HealthChecksMinAggregateOutputType = {
    id: number | null
    alcode: string | null
    alchkhos: string | null
    alchkstatus: number | null
    alchkdate: Date | null
    alchkprovid: string | null
    licenseno: string | null
    chkname: string | null
    chkposition: string | null
    alchkdesc: string | null
    alchkdoc: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type HealthChecksMaxAggregateOutputType = {
    id: number | null
    alcode: string | null
    alchkhos: string | null
    alchkstatus: number | null
    alchkdate: Date | null
    alchkprovid: string | null
    licenseno: string | null
    chkname: string | null
    chkposition: string | null
    alchkdesc: string | null
    alchkdoc: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type HealthChecksCountAggregateOutputType = {
    id: number
    alcode: number
    alchkhos: number
    alchkstatus: number
    alchkdate: number
    alchkprovid: number
    licenseno: number
    chkname: number
    chkposition: number
    alchkdesc: number
    alchkdoc: number
    isDelete: number
    createdBy: number
    createdOn: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type HealthChecksAvgAggregateInputType = {
    id?: true
    alchkstatus?: true
    createdBy?: true
    updatedBy?: true
  }

  export type HealthChecksSumAggregateInputType = {
    id?: true
    alchkstatus?: true
    createdBy?: true
    updatedBy?: true
  }

  export type HealthChecksMinAggregateInputType = {
    id?: true
    alcode?: true
    alchkhos?: true
    alchkstatus?: true
    alchkdate?: true
    alchkprovid?: true
    licenseno?: true
    chkname?: true
    chkposition?: true
    alchkdesc?: true
    alchkdoc?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type HealthChecksMaxAggregateInputType = {
    id?: true
    alcode?: true
    alchkhos?: true
    alchkstatus?: true
    alchkdate?: true
    alchkprovid?: true
    licenseno?: true
    chkname?: true
    chkposition?: true
    alchkdesc?: true
    alchkdoc?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type HealthChecksCountAggregateInputType = {
    id?: true
    alcode?: true
    alchkhos?: true
    alchkstatus?: true
    alchkdate?: true
    alchkprovid?: true
    licenseno?: true
    chkname?: true
    chkposition?: true
    alchkdesc?: true
    alchkdoc?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type HealthChecksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthChecks to aggregate.
     */
    where?: HealthChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthChecks to fetch.
     */
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HealthChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthChecks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthChecks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HealthChecks
    **/
    _count?: true | HealthChecksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HealthChecksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HealthChecksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HealthChecksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HealthChecksMaxAggregateInputType
  }

  export type GetHealthChecksAggregateType<T extends HealthChecksAggregateArgs> = {
        [P in keyof T & keyof AggregateHealthChecks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHealthChecks[P]>
      : GetScalarType<T[P], AggregateHealthChecks[P]>
  }




  export type HealthChecksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HealthChecksWhereInput
    orderBy?: HealthChecksOrderByWithAggregationInput | HealthChecksOrderByWithAggregationInput[]
    by: HealthChecksScalarFieldEnum[] | HealthChecksScalarFieldEnum
    having?: HealthChecksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HealthChecksCountAggregateInputType | true
    _avg?: HealthChecksAvgAggregateInputType
    _sum?: HealthChecksSumAggregateInputType
    _min?: HealthChecksMinAggregateInputType
    _max?: HealthChecksMaxAggregateInputType
  }

  export type HealthChecksGroupByOutputType = {
    id: number
    alcode: string
    alchkhos: string | null
    alchkstatus: number | null
    alchkdate: Date
    alchkprovid: string | null
    licenseno: string | null
    chkname: string | null
    chkposition: string | null
    alchkdesc: string | null
    alchkdoc: string | null
    isDelete: boolean
    createdBy: number | null
    createdOn: Date
    updatedBy: number | null
    updatedOn: Date | null
    _count: HealthChecksCountAggregateOutputType | null
    _avg: HealthChecksAvgAggregateOutputType | null
    _sum: HealthChecksSumAggregateOutputType | null
    _min: HealthChecksMinAggregateOutputType | null
    _max: HealthChecksMaxAggregateOutputType | null
  }

  type GetHealthChecksGroupByPayload<T extends HealthChecksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HealthChecksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HealthChecksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HealthChecksGroupByOutputType[P]>
            : GetScalarType<T[P], HealthChecksGroupByOutputType[P]>
        }
      >
    >


  export type HealthChecksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alcode?: boolean
    alchkhos?: boolean
    alchkstatus?: boolean
    alchkdate?: boolean
    alchkprovid?: boolean
    licenseno?: boolean
    chkname?: boolean
    chkposition?: boolean
    alchkdesc?: boolean
    alchkdoc?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["healthChecks"]>

  export type HealthChecksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alcode?: boolean
    alchkhos?: boolean
    alchkstatus?: boolean
    alchkdate?: boolean
    alchkprovid?: boolean
    licenseno?: boolean
    chkname?: boolean
    chkposition?: boolean
    alchkdesc?: boolean
    alchkdoc?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["healthChecks"]>

  export type HealthChecksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    alcode?: boolean
    alchkhos?: boolean
    alchkstatus?: boolean
    alchkdate?: boolean
    alchkprovid?: boolean
    licenseno?: boolean
    chkname?: boolean
    chkposition?: boolean
    alchkdesc?: boolean
    alchkdoc?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["healthChecks"]>

  export type HealthChecksSelectScalar = {
    id?: boolean
    alcode?: boolean
    alchkhos?: boolean
    alchkstatus?: boolean
    alchkdate?: boolean
    alchkprovid?: boolean
    licenseno?: boolean
    chkname?: boolean
    chkposition?: boolean
    alchkdesc?: boolean
    alchkdoc?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type HealthChecksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "alcode" | "alchkhos" | "alchkstatus" | "alchkdate" | "alchkprovid" | "licenseno" | "chkname" | "chkposition" | "alchkdesc" | "alchkdoc" | "isDelete" | "createdBy" | "createdOn" | "updatedBy" | "updatedOn", ExtArgs["result"]["healthChecks"]>
  export type HealthChecksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }
  export type HealthChecksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }
  export type HealthChecksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ForeignWorkers?: boolean | ForeignWorkersDefaultArgs<ExtArgs>
    createdByUser?: boolean | HealthChecks$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | HealthChecks$updatedByUserArgs<ExtArgs>
  }

  export type $HealthChecksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HealthChecks"
    objects: {
      ForeignWorkers: Prisma.$ForeignWorkersPayload<ExtArgs>
      createdByUser: Prisma.$UsersPayload<ExtArgs> | null
      updatedByUser: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      alcode: string
      alchkhos: string | null
      alchkstatus: number | null
      alchkdate: Date
      alchkprovid: string | null
      licenseno: string | null
      chkname: string | null
      chkposition: string | null
      alchkdesc: string | null
      alchkdoc: string | null
      isDelete: boolean
      createdBy: number | null
      createdOn: Date
      updatedBy: number | null
      updatedOn: Date | null
    }, ExtArgs["result"]["healthChecks"]>
    composites: {}
  }

  type HealthChecksGetPayload<S extends boolean | null | undefined | HealthChecksDefaultArgs> = $Result.GetResult<Prisma.$HealthChecksPayload, S>

  type HealthChecksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HealthChecksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HealthChecksCountAggregateInputType | true
    }

  export interface HealthChecksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HealthChecks'], meta: { name: 'HealthChecks' } }
    /**
     * Find zero or one HealthChecks that matches the filter.
     * @param {HealthChecksFindUniqueArgs} args - Arguments to find a HealthChecks
     * @example
     * // Get one HealthChecks
     * const healthChecks = await prisma.healthChecks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HealthChecksFindUniqueArgs>(args: SelectSubset<T, HealthChecksFindUniqueArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one HealthChecks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HealthChecksFindUniqueOrThrowArgs} args - Arguments to find a HealthChecks
     * @example
     * // Get one HealthChecks
     * const healthChecks = await prisma.healthChecks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HealthChecksFindUniqueOrThrowArgs>(args: SelectSubset<T, HealthChecksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first HealthChecks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksFindFirstArgs} args - Arguments to find a HealthChecks
     * @example
     * // Get one HealthChecks
     * const healthChecks = await prisma.healthChecks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HealthChecksFindFirstArgs>(args?: SelectSubset<T, HealthChecksFindFirstArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first HealthChecks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksFindFirstOrThrowArgs} args - Arguments to find a HealthChecks
     * @example
     * // Get one HealthChecks
     * const healthChecks = await prisma.healthChecks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HealthChecksFindFirstOrThrowArgs>(args?: SelectSubset<T, HealthChecksFindFirstOrThrowArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more HealthChecks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HealthChecks
     * const healthChecks = await prisma.healthChecks.findMany()
     * 
     * // Get first 10 HealthChecks
     * const healthChecks = await prisma.healthChecks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const healthChecksWithIdOnly = await prisma.healthChecks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HealthChecksFindManyArgs>(args?: SelectSubset<T, HealthChecksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a HealthChecks.
     * @param {HealthChecksCreateArgs} args - Arguments to create a HealthChecks.
     * @example
     * // Create one HealthChecks
     * const HealthChecks = await prisma.healthChecks.create({
     *   data: {
     *     // ... data to create a HealthChecks
     *   }
     * })
     * 
     */
    create<T extends HealthChecksCreateArgs>(args: SelectSubset<T, HealthChecksCreateArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many HealthChecks.
     * @param {HealthChecksCreateManyArgs} args - Arguments to create many HealthChecks.
     * @example
     * // Create many HealthChecks
     * const healthChecks = await prisma.healthChecks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HealthChecksCreateManyArgs>(args?: SelectSubset<T, HealthChecksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HealthChecks and returns the data saved in the database.
     * @param {HealthChecksCreateManyAndReturnArgs} args - Arguments to create many HealthChecks.
     * @example
     * // Create many HealthChecks
     * const healthChecks = await prisma.healthChecks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HealthChecks and only return the `id`
     * const healthChecksWithIdOnly = await prisma.healthChecks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HealthChecksCreateManyAndReturnArgs>(args?: SelectSubset<T, HealthChecksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a HealthChecks.
     * @param {HealthChecksDeleteArgs} args - Arguments to delete one HealthChecks.
     * @example
     * // Delete one HealthChecks
     * const HealthChecks = await prisma.healthChecks.delete({
     *   where: {
     *     // ... filter to delete one HealthChecks
     *   }
     * })
     * 
     */
    delete<T extends HealthChecksDeleteArgs>(args: SelectSubset<T, HealthChecksDeleteArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one HealthChecks.
     * @param {HealthChecksUpdateArgs} args - Arguments to update one HealthChecks.
     * @example
     * // Update one HealthChecks
     * const healthChecks = await prisma.healthChecks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HealthChecksUpdateArgs>(args: SelectSubset<T, HealthChecksUpdateArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more HealthChecks.
     * @param {HealthChecksDeleteManyArgs} args - Arguments to filter HealthChecks to delete.
     * @example
     * // Delete a few HealthChecks
     * const { count } = await prisma.healthChecks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HealthChecksDeleteManyArgs>(args?: SelectSubset<T, HealthChecksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HealthChecks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HealthChecks
     * const healthChecks = await prisma.healthChecks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HealthChecksUpdateManyArgs>(args: SelectSubset<T, HealthChecksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HealthChecks and returns the data updated in the database.
     * @param {HealthChecksUpdateManyAndReturnArgs} args - Arguments to update many HealthChecks.
     * @example
     * // Update many HealthChecks
     * const healthChecks = await prisma.healthChecks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HealthChecks and only return the `id`
     * const healthChecksWithIdOnly = await prisma.healthChecks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HealthChecksUpdateManyAndReturnArgs>(args: SelectSubset<T, HealthChecksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one HealthChecks.
     * @param {HealthChecksUpsertArgs} args - Arguments to update or create a HealthChecks.
     * @example
     * // Update or create a HealthChecks
     * const healthChecks = await prisma.healthChecks.upsert({
     *   create: {
     *     // ... data to create a HealthChecks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HealthChecks we want to update
     *   }
     * })
     */
    upsert<T extends HealthChecksUpsertArgs>(args: SelectSubset<T, HealthChecksUpsertArgs<ExtArgs>>): Prisma__HealthChecksClient<$Result.GetResult<Prisma.$HealthChecksPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of HealthChecks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksCountArgs} args - Arguments to filter HealthChecks to count.
     * @example
     * // Count the number of HealthChecks
     * const count = await prisma.healthChecks.count({
     *   where: {
     *     // ... the filter for the HealthChecks we want to count
     *   }
     * })
    **/
    count<T extends HealthChecksCountArgs>(
      args?: Subset<T, HealthChecksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HealthChecksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HealthChecks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HealthChecksAggregateArgs>(args: Subset<T, HealthChecksAggregateArgs>): Prisma.PrismaPromise<GetHealthChecksAggregateType<T>>

    /**
     * Group by HealthChecks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HealthChecksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HealthChecksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HealthChecksGroupByArgs['orderBy'] }
        : { orderBy?: HealthChecksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HealthChecksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHealthChecksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HealthChecks model
   */
  readonly fields: HealthChecksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HealthChecks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HealthChecksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ForeignWorkers<T extends ForeignWorkersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ForeignWorkersDefaultArgs<ExtArgs>>): Prisma__ForeignWorkersClient<$Result.GetResult<Prisma.$ForeignWorkersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    createdByUser<T extends HealthChecks$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, HealthChecks$createdByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends HealthChecks$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, HealthChecks$updatedByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HealthChecks model
   */ 
  interface HealthChecksFieldRefs {
    readonly id: FieldRef<"HealthChecks", 'Int'>
    readonly alcode: FieldRef<"HealthChecks", 'String'>
    readonly alchkhos: FieldRef<"HealthChecks", 'String'>
    readonly alchkstatus: FieldRef<"HealthChecks", 'Int'>
    readonly alchkdate: FieldRef<"HealthChecks", 'DateTime'>
    readonly alchkprovid: FieldRef<"HealthChecks", 'String'>
    readonly licenseno: FieldRef<"HealthChecks", 'String'>
    readonly chkname: FieldRef<"HealthChecks", 'String'>
    readonly chkposition: FieldRef<"HealthChecks", 'String'>
    readonly alchkdesc: FieldRef<"HealthChecks", 'String'>
    readonly alchkdoc: FieldRef<"HealthChecks", 'String'>
    readonly isDelete: FieldRef<"HealthChecks", 'Boolean'>
    readonly createdBy: FieldRef<"HealthChecks", 'Int'>
    readonly createdOn: FieldRef<"HealthChecks", 'DateTime'>
    readonly updatedBy: FieldRef<"HealthChecks", 'Int'>
    readonly updatedOn: FieldRef<"HealthChecks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HealthChecks findUnique
   */
  export type HealthChecksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter, which HealthChecks to fetch.
     */
    where: HealthChecksWhereUniqueInput
  }

  /**
   * HealthChecks findUniqueOrThrow
   */
  export type HealthChecksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter, which HealthChecks to fetch.
     */
    where: HealthChecksWhereUniqueInput
  }

  /**
   * HealthChecks findFirst
   */
  export type HealthChecksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter, which HealthChecks to fetch.
     */
    where?: HealthChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthChecks to fetch.
     */
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthChecks.
     */
    cursor?: HealthChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthChecks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthChecks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthChecks.
     */
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * HealthChecks findFirstOrThrow
   */
  export type HealthChecksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter, which HealthChecks to fetch.
     */
    where?: HealthChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthChecks to fetch.
     */
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HealthChecks.
     */
    cursor?: HealthChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthChecks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthChecks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HealthChecks.
     */
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * HealthChecks findMany
   */
  export type HealthChecksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter, which HealthChecks to fetch.
     */
    where?: HealthChecksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HealthChecks to fetch.
     */
    orderBy?: HealthChecksOrderByWithRelationInput | HealthChecksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HealthChecks.
     */
    cursor?: HealthChecksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HealthChecks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HealthChecks.
     */
    skip?: number
    distinct?: HealthChecksScalarFieldEnum | HealthChecksScalarFieldEnum[]
  }

  /**
   * HealthChecks create
   */
  export type HealthChecksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * The data needed to create a HealthChecks.
     */
    data: XOR<HealthChecksCreateInput, HealthChecksUncheckedCreateInput>
  }

  /**
   * HealthChecks createMany
   */
  export type HealthChecksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HealthChecks.
     */
    data: HealthChecksCreateManyInput | HealthChecksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HealthChecks createManyAndReturn
   */
  export type HealthChecksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * The data used to create many HealthChecks.
     */
    data: HealthChecksCreateManyInput | HealthChecksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * HealthChecks update
   */
  export type HealthChecksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * The data needed to update a HealthChecks.
     */
    data: XOR<HealthChecksUpdateInput, HealthChecksUncheckedUpdateInput>
    /**
     * Choose, which HealthChecks to update.
     */
    where: HealthChecksWhereUniqueInput
  }

  /**
   * HealthChecks updateMany
   */
  export type HealthChecksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HealthChecks.
     */
    data: XOR<HealthChecksUpdateManyMutationInput, HealthChecksUncheckedUpdateManyInput>
    /**
     * Filter which HealthChecks to update
     */
    where?: HealthChecksWhereInput
  }

  /**
   * HealthChecks updateManyAndReturn
   */
  export type HealthChecksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * The data used to update HealthChecks.
     */
    data: XOR<HealthChecksUpdateManyMutationInput, HealthChecksUncheckedUpdateManyInput>
    /**
     * Filter which HealthChecks to update
     */
    where?: HealthChecksWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * HealthChecks upsert
   */
  export type HealthChecksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * The filter to search for the HealthChecks to update in case it exists.
     */
    where: HealthChecksWhereUniqueInput
    /**
     * In case the HealthChecks found by the `where` argument doesn't exist, create a new HealthChecks with this data.
     */
    create: XOR<HealthChecksCreateInput, HealthChecksUncheckedCreateInput>
    /**
     * In case the HealthChecks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HealthChecksUpdateInput, HealthChecksUncheckedUpdateInput>
  }

  /**
   * HealthChecks delete
   */
  export type HealthChecksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
    /**
     * Filter which HealthChecks to delete.
     */
    where: HealthChecksWhereUniqueInput
  }

  /**
   * HealthChecks deleteMany
   */
  export type HealthChecksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HealthChecks to delete
     */
    where?: HealthChecksWhereInput
  }

  /**
   * HealthChecks.createdByUser
   */
  export type HealthChecks$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * HealthChecks.updatedByUser
   */
  export type HealthChecks$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * HealthChecks without action
   */
  export type HealthChecksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HealthChecks
     */
    select?: HealthChecksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HealthChecks
     */
    omit?: HealthChecksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HealthChecksInclude<ExtArgs> | null
  }


  /**
   * Model ApiRequests
   */

  export type AggregateApiRequests = {
    _count: ApiRequestsCountAggregateOutputType | null
    _avg: ApiRequestsAvgAggregateOutputType | null
    _sum: ApiRequestsSumAggregateOutputType | null
    _min: ApiRequestsMinAggregateOutputType | null
    _max: ApiRequestsMaxAggregateOutputType | null
  }

  export type ApiRequestsAvgAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type ApiRequestsSumAggregateOutputType = {
    id: number | null
    createdBy: number | null
    updatedBy: number | null
  }

  export type ApiRequestsMinAggregateOutputType = {
    id: number | null
    reqcode: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type ApiRequestsMaxAggregateOutputType = {
    id: number | null
    reqcode: string | null
    isDelete: boolean | null
    createdBy: number | null
    createdOn: Date | null
    updatedBy: number | null
    updatedOn: Date | null
  }

  export type ApiRequestsCountAggregateOutputType = {
    id: number
    reqcode: number
    isDelete: number
    createdBy: number
    createdOn: number
    updatedBy: number
    updatedOn: number
    _all: number
  }


  export type ApiRequestsAvgAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ApiRequestsSumAggregateInputType = {
    id?: true
    createdBy?: true
    updatedBy?: true
  }

  export type ApiRequestsMinAggregateInputType = {
    id?: true
    reqcode?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type ApiRequestsMaxAggregateInputType = {
    id?: true
    reqcode?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
  }

  export type ApiRequestsCountAggregateInputType = {
    id?: true
    reqcode?: true
    isDelete?: true
    createdBy?: true
    createdOn?: true
    updatedBy?: true
    updatedOn?: true
    _all?: true
  }

  export type ApiRequestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiRequests to aggregate.
     */
    where?: ApiRequestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiRequests to fetch.
     */
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApiRequestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApiRequests
    **/
    _count?: true | ApiRequestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ApiRequestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ApiRequestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApiRequestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApiRequestsMaxAggregateInputType
  }

  export type GetApiRequestsAggregateType<T extends ApiRequestsAggregateArgs> = {
        [P in keyof T & keyof AggregateApiRequests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApiRequests[P]>
      : GetScalarType<T[P], AggregateApiRequests[P]>
  }




  export type ApiRequestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApiRequestsWhereInput
    orderBy?: ApiRequestsOrderByWithAggregationInput | ApiRequestsOrderByWithAggregationInput[]
    by: ApiRequestsScalarFieldEnum[] | ApiRequestsScalarFieldEnum
    having?: ApiRequestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApiRequestsCountAggregateInputType | true
    _avg?: ApiRequestsAvgAggregateInputType
    _sum?: ApiRequestsSumAggregateInputType
    _min?: ApiRequestsMinAggregateInputType
    _max?: ApiRequestsMaxAggregateInputType
  }

  export type ApiRequestsGroupByOutputType = {
    id: number
    reqcode: string
    isDelete: boolean
    createdBy: number | null
    createdOn: Date
    updatedBy: number | null
    updatedOn: Date | null
    _count: ApiRequestsCountAggregateOutputType | null
    _avg: ApiRequestsAvgAggregateOutputType | null
    _sum: ApiRequestsSumAggregateOutputType | null
    _min: ApiRequestsMinAggregateOutputType | null
    _max: ApiRequestsMaxAggregateOutputType | null
  }

  type GetApiRequestsGroupByPayload<T extends ApiRequestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApiRequestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApiRequestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApiRequestsGroupByOutputType[P]>
            : GetScalarType<T[P], ApiRequestsGroupByOutputType[P]>
        }
      >
    >


  export type ApiRequestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reqcode?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["apiRequests"]>

  export type ApiRequestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reqcode?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["apiRequests"]>

  export type ApiRequestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    reqcode?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }, ExtArgs["result"]["apiRequests"]>

  export type ApiRequestsSelectScalar = {
    id?: boolean
    reqcode?: boolean
    isDelete?: boolean
    createdBy?: boolean
    createdOn?: boolean
    updatedBy?: boolean
    updatedOn?: boolean
  }

  export type ApiRequestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "reqcode" | "isDelete" | "createdBy" | "createdOn" | "updatedBy" | "updatedOn", ExtArgs["result"]["apiRequests"]>
  export type ApiRequestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }
  export type ApiRequestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }
  export type ApiRequestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    createdByUser?: boolean | ApiRequests$createdByUserArgs<ExtArgs>
    updatedByUser?: boolean | ApiRequests$updatedByUserArgs<ExtArgs>
  }

  export type $ApiRequestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApiRequests"
    objects: {
      createdByUser: Prisma.$UsersPayload<ExtArgs> | null
      updatedByUser: Prisma.$UsersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      reqcode: string
      isDelete: boolean
      createdBy: number | null
      createdOn: Date
      updatedBy: number | null
      updatedOn: Date | null
    }, ExtArgs["result"]["apiRequests"]>
    composites: {}
  }

  type ApiRequestsGetPayload<S extends boolean | null | undefined | ApiRequestsDefaultArgs> = $Result.GetResult<Prisma.$ApiRequestsPayload, S>

  type ApiRequestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ApiRequestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ApiRequestsCountAggregateInputType | true
    }

  export interface ApiRequestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApiRequests'], meta: { name: 'ApiRequests' } }
    /**
     * Find zero or one ApiRequests that matches the filter.
     * @param {ApiRequestsFindUniqueArgs} args - Arguments to find a ApiRequests
     * @example
     * // Get one ApiRequests
     * const apiRequests = await prisma.apiRequests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApiRequestsFindUniqueArgs>(args: SelectSubset<T, ApiRequestsFindUniqueArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one ApiRequests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ApiRequestsFindUniqueOrThrowArgs} args - Arguments to find a ApiRequests
     * @example
     * // Get one ApiRequests
     * const apiRequests = await prisma.apiRequests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApiRequestsFindUniqueOrThrowArgs>(args: SelectSubset<T, ApiRequestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first ApiRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsFindFirstArgs} args - Arguments to find a ApiRequests
     * @example
     * // Get one ApiRequests
     * const apiRequests = await prisma.apiRequests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApiRequestsFindFirstArgs>(args?: SelectSubset<T, ApiRequestsFindFirstArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first ApiRequests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsFindFirstOrThrowArgs} args - Arguments to find a ApiRequests
     * @example
     * // Get one ApiRequests
     * const apiRequests = await prisma.apiRequests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApiRequestsFindFirstOrThrowArgs>(args?: SelectSubset<T, ApiRequestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more ApiRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApiRequests
     * const apiRequests = await prisma.apiRequests.findMany()
     * 
     * // Get first 10 ApiRequests
     * const apiRequests = await prisma.apiRequests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const apiRequestsWithIdOnly = await prisma.apiRequests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApiRequestsFindManyArgs>(args?: SelectSubset<T, ApiRequestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a ApiRequests.
     * @param {ApiRequestsCreateArgs} args - Arguments to create a ApiRequests.
     * @example
     * // Create one ApiRequests
     * const ApiRequests = await prisma.apiRequests.create({
     *   data: {
     *     // ... data to create a ApiRequests
     *   }
     * })
     * 
     */
    create<T extends ApiRequestsCreateArgs>(args: SelectSubset<T, ApiRequestsCreateArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many ApiRequests.
     * @param {ApiRequestsCreateManyArgs} args - Arguments to create many ApiRequests.
     * @example
     * // Create many ApiRequests
     * const apiRequests = await prisma.apiRequests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApiRequestsCreateManyArgs>(args?: SelectSubset<T, ApiRequestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ApiRequests and returns the data saved in the database.
     * @param {ApiRequestsCreateManyAndReturnArgs} args - Arguments to create many ApiRequests.
     * @example
     * // Create many ApiRequests
     * const apiRequests = await prisma.apiRequests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ApiRequests and only return the `id`
     * const apiRequestsWithIdOnly = await prisma.apiRequests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ApiRequestsCreateManyAndReturnArgs>(args?: SelectSubset<T, ApiRequestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a ApiRequests.
     * @param {ApiRequestsDeleteArgs} args - Arguments to delete one ApiRequests.
     * @example
     * // Delete one ApiRequests
     * const ApiRequests = await prisma.apiRequests.delete({
     *   where: {
     *     // ... filter to delete one ApiRequests
     *   }
     * })
     * 
     */
    delete<T extends ApiRequestsDeleteArgs>(args: SelectSubset<T, ApiRequestsDeleteArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one ApiRequests.
     * @param {ApiRequestsUpdateArgs} args - Arguments to update one ApiRequests.
     * @example
     * // Update one ApiRequests
     * const apiRequests = await prisma.apiRequests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApiRequestsUpdateArgs>(args: SelectSubset<T, ApiRequestsUpdateArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more ApiRequests.
     * @param {ApiRequestsDeleteManyArgs} args - Arguments to filter ApiRequests to delete.
     * @example
     * // Delete a few ApiRequests
     * const { count } = await prisma.apiRequests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApiRequestsDeleteManyArgs>(args?: SelectSubset<T, ApiRequestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApiRequests
     * const apiRequests = await prisma.apiRequests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApiRequestsUpdateManyArgs>(args: SelectSubset<T, ApiRequestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApiRequests and returns the data updated in the database.
     * @param {ApiRequestsUpdateManyAndReturnArgs} args - Arguments to update many ApiRequests.
     * @example
     * // Update many ApiRequests
     * const apiRequests = await prisma.apiRequests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ApiRequests and only return the `id`
     * const apiRequestsWithIdOnly = await prisma.apiRequests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ApiRequestsUpdateManyAndReturnArgs>(args: SelectSubset<T, ApiRequestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one ApiRequests.
     * @param {ApiRequestsUpsertArgs} args - Arguments to update or create a ApiRequests.
     * @example
     * // Update or create a ApiRequests
     * const apiRequests = await prisma.apiRequests.upsert({
     *   create: {
     *     // ... data to create a ApiRequests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApiRequests we want to update
     *   }
     * })
     */
    upsert<T extends ApiRequestsUpsertArgs>(args: SelectSubset<T, ApiRequestsUpsertArgs<ExtArgs>>): Prisma__ApiRequestsClient<$Result.GetResult<Prisma.$ApiRequestsPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of ApiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsCountArgs} args - Arguments to filter ApiRequests to count.
     * @example
     * // Count the number of ApiRequests
     * const count = await prisma.apiRequests.count({
     *   where: {
     *     // ... the filter for the ApiRequests we want to count
     *   }
     * })
    **/
    count<T extends ApiRequestsCountArgs>(
      args?: Subset<T, ApiRequestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApiRequestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApiRequestsAggregateArgs>(args: Subset<T, ApiRequestsAggregateArgs>): Prisma.PrismaPromise<GetApiRequestsAggregateType<T>>

    /**
     * Group by ApiRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApiRequestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApiRequestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApiRequestsGroupByArgs['orderBy'] }
        : { orderBy?: ApiRequestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApiRequestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApiRequestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApiRequests model
   */
  readonly fields: ApiRequestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApiRequests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApiRequestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    createdByUser<T extends ApiRequests$createdByUserArgs<ExtArgs> = {}>(args?: Subset<T, ApiRequests$createdByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    updatedByUser<T extends ApiRequests$updatedByUserArgs<ExtArgs> = {}>(args?: Subset<T, ApiRequests$updatedByUserArgs<ExtArgs>>): Prisma__UsersClient<$Result.GetResult<Prisma.$UsersPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApiRequests model
   */ 
  interface ApiRequestsFieldRefs {
    readonly id: FieldRef<"ApiRequests", 'Int'>
    readonly reqcode: FieldRef<"ApiRequests", 'String'>
    readonly isDelete: FieldRef<"ApiRequests", 'Boolean'>
    readonly createdBy: FieldRef<"ApiRequests", 'Int'>
    readonly createdOn: FieldRef<"ApiRequests", 'DateTime'>
    readonly updatedBy: FieldRef<"ApiRequests", 'Int'>
    readonly updatedOn: FieldRef<"ApiRequests", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApiRequests findUnique
   */
  export type ApiRequestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter, which ApiRequests to fetch.
     */
    where: ApiRequestsWhereUniqueInput
  }

  /**
   * ApiRequests findUniqueOrThrow
   */
  export type ApiRequestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter, which ApiRequests to fetch.
     */
    where: ApiRequestsWhereUniqueInput
  }

  /**
   * ApiRequests findFirst
   */
  export type ApiRequestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter, which ApiRequests to fetch.
     */
    where?: ApiRequestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiRequests to fetch.
     */
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiRequests.
     */
    cursor?: ApiRequestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiRequests.
     */
    distinct?: ApiRequestsScalarFieldEnum | ApiRequestsScalarFieldEnum[]
  }

  /**
   * ApiRequests findFirstOrThrow
   */
  export type ApiRequestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter, which ApiRequests to fetch.
     */
    where?: ApiRequestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiRequests to fetch.
     */
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApiRequests.
     */
    cursor?: ApiRequestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApiRequests.
     */
    distinct?: ApiRequestsScalarFieldEnum | ApiRequestsScalarFieldEnum[]
  }

  /**
   * ApiRequests findMany
   */
  export type ApiRequestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter, which ApiRequests to fetch.
     */
    where?: ApiRequestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApiRequests to fetch.
     */
    orderBy?: ApiRequestsOrderByWithRelationInput | ApiRequestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApiRequests.
     */
    cursor?: ApiRequestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApiRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApiRequests.
     */
    skip?: number
    distinct?: ApiRequestsScalarFieldEnum | ApiRequestsScalarFieldEnum[]
  }

  /**
   * ApiRequests create
   */
  export type ApiRequestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * The data needed to create a ApiRequests.
     */
    data: XOR<ApiRequestsCreateInput, ApiRequestsUncheckedCreateInput>
  }

  /**
   * ApiRequests createMany
   */
  export type ApiRequestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApiRequests.
     */
    data: ApiRequestsCreateManyInput | ApiRequestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApiRequests createManyAndReturn
   */
  export type ApiRequestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * The data used to create many ApiRequests.
     */
    data: ApiRequestsCreateManyInput | ApiRequestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApiRequests update
   */
  export type ApiRequestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * The data needed to update a ApiRequests.
     */
    data: XOR<ApiRequestsUpdateInput, ApiRequestsUncheckedUpdateInput>
    /**
     * Choose, which ApiRequests to update.
     */
    where: ApiRequestsWhereUniqueInput
  }

  /**
   * ApiRequests updateMany
   */
  export type ApiRequestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApiRequests.
     */
    data: XOR<ApiRequestsUpdateManyMutationInput, ApiRequestsUncheckedUpdateManyInput>
    /**
     * Filter which ApiRequests to update
     */
    where?: ApiRequestsWhereInput
  }

  /**
   * ApiRequests updateManyAndReturn
   */
  export type ApiRequestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * The data used to update ApiRequests.
     */
    data: XOR<ApiRequestsUpdateManyMutationInput, ApiRequestsUncheckedUpdateManyInput>
    /**
     * Filter which ApiRequests to update
     */
    where?: ApiRequestsWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ApiRequests upsert
   */
  export type ApiRequestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * The filter to search for the ApiRequests to update in case it exists.
     */
    where: ApiRequestsWhereUniqueInput
    /**
     * In case the ApiRequests found by the `where` argument doesn't exist, create a new ApiRequests with this data.
     */
    create: XOR<ApiRequestsCreateInput, ApiRequestsUncheckedCreateInput>
    /**
     * In case the ApiRequests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApiRequestsUpdateInput, ApiRequestsUncheckedUpdateInput>
  }

  /**
   * ApiRequests delete
   */
  export type ApiRequestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
    /**
     * Filter which ApiRequests to delete.
     */
    where: ApiRequestsWhereUniqueInput
  }

  /**
   * ApiRequests deleteMany
   */
  export type ApiRequestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApiRequests to delete
     */
    where?: ApiRequestsWhereInput
  }

  /**
   * ApiRequests.createdByUser
   */
  export type ApiRequests$createdByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ApiRequests.updatedByUser
   */
  export type ApiRequests$updatedByUserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Users
     */
    select?: UsersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Users
     */
    omit?: UsersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsersInclude<ExtArgs> | null
    where?: UsersWhereInput
  }

  /**
   * ApiRequests without action
   */
  export type ApiRequestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApiRequests
     */
    select?: ApiRequestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ApiRequests
     */
    omit?: ApiRequestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ApiRequestsInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    password: 'password'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const EmployersScalarFieldEnum: {
    id: 'id',
    empname: 'empname',
    wkaddress: 'wkaddress',
    btname: 'btname'
  };

  export type EmployersScalarFieldEnum = (typeof EmployersScalarFieldEnum)[keyof typeof EmployersScalarFieldEnum]


  export const ForeignWorkersScalarFieldEnum: {
    id: 'id',
    employer_id: 'employer_id',
    alcode: 'alcode',
    altype: 'altype',
    alprefix: 'alprefix',
    alprefixen: 'alprefixen',
    alname_en: 'alname_en',
    alsname_en: 'alsname_en',
    alprefix_th: 'alprefix_th',
    alname_th: 'alname_th',
    alsname_th: 'alsname_th',
    albdate: 'albdate',
    algender: 'algender',
    alnation: 'alnation',
    alposid: 'alposid',
    blood_group: 'blood_group',
    nickname: 'nickname',
    religion: 'religion',
    phone_number: 'phone_number',
    email: 'email',
    address: 'address',
    subdistrict: 'subdistrict',
    district: 'district',
    province: 'province',
    postal_code: 'postal_code',
    remark: 'remark',
    isDelete: 'isDelete',
    createdBy: 'createdBy',
    createdOn: 'createdOn',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type ForeignWorkersScalarFieldEnum = (typeof ForeignWorkersScalarFieldEnum)[keyof typeof ForeignWorkersScalarFieldEnum]


  export const HealthChecksScalarFieldEnum: {
    id: 'id',
    alcode: 'alcode',
    alchkhos: 'alchkhos',
    alchkstatus: 'alchkstatus',
    alchkdate: 'alchkdate',
    alchkprovid: 'alchkprovid',
    licenseno: 'licenseno',
    chkname: 'chkname',
    chkposition: 'chkposition',
    alchkdesc: 'alchkdesc',
    alchkdoc: 'alchkdoc',
    isDelete: 'isDelete',
    createdBy: 'createdBy',
    createdOn: 'createdOn',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type HealthChecksScalarFieldEnum = (typeof HealthChecksScalarFieldEnum)[keyof typeof HealthChecksScalarFieldEnum]


  export const ApiRequestsScalarFieldEnum: {
    id: 'id',
    reqcode: 'reqcode',
    isDelete: 'isDelete',
    createdBy: 'createdBy',
    createdOn: 'createdOn',
    updatedBy: 'updatedBy',
    updatedOn: 'updatedOn'
  };

  export type ApiRequestsScalarFieldEnum = (typeof ApiRequestsScalarFieldEnum)[keyof typeof ApiRequestsScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UsersWhereInput = {
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    id?: IntFilter<"Users"> | number
    username?: StringFilter<"Users"> | string
    password?: StringFilter<"Users"> | string
    CreatedForeignWorkers?: ForeignWorkersListRelationFilter
    UpdatedForeignWorkers?: ForeignWorkersListRelationFilter
    CreatedApiRequests?: ApiRequestsListRelationFilter
    UpdatedApiRequests?: ApiRequestsListRelationFilter
    CreatedHealthChecks?: HealthChecksListRelationFilter
    UpdatedHealthChecks?: HealthChecksListRelationFilter
  }

  export type UsersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    CreatedForeignWorkers?: ForeignWorkersOrderByRelationAggregateInput
    UpdatedForeignWorkers?: ForeignWorkersOrderByRelationAggregateInput
    CreatedApiRequests?: ApiRequestsOrderByRelationAggregateInput
    UpdatedApiRequests?: ApiRequestsOrderByRelationAggregateInput
    CreatedHealthChecks?: HealthChecksOrderByRelationAggregateInput
    UpdatedHealthChecks?: HealthChecksOrderByRelationAggregateInput
  }

  export type UsersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    AND?: UsersWhereInput | UsersWhereInput[]
    OR?: UsersWhereInput[]
    NOT?: UsersWhereInput | UsersWhereInput[]
    password?: StringFilter<"Users"> | string
    CreatedForeignWorkers?: ForeignWorkersListRelationFilter
    UpdatedForeignWorkers?: ForeignWorkersListRelationFilter
    CreatedApiRequests?: ApiRequestsListRelationFilter
    UpdatedApiRequests?: ApiRequestsListRelationFilter
    CreatedHealthChecks?: HealthChecksListRelationFilter
    UpdatedHealthChecks?: HealthChecksListRelationFilter
  }, "id" | "username">

  export type UsersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
    _count?: UsersCountOrderByAggregateInput
    _avg?: UsersAvgOrderByAggregateInput
    _max?: UsersMaxOrderByAggregateInput
    _min?: UsersMinOrderByAggregateInput
    _sum?: UsersSumOrderByAggregateInput
  }

  export type UsersScalarWhereWithAggregatesInput = {
    AND?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    OR?: UsersScalarWhereWithAggregatesInput[]
    NOT?: UsersScalarWhereWithAggregatesInput | UsersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Users"> | number
    username?: StringWithAggregatesFilter<"Users"> | string
    password?: StringWithAggregatesFilter<"Users"> | string
  }

  export type EmployersWhereInput = {
    AND?: EmployersWhereInput | EmployersWhereInput[]
    OR?: EmployersWhereInput[]
    NOT?: EmployersWhereInput | EmployersWhereInput[]
    id?: IntFilter<"Employers"> | number
    empname?: StringFilter<"Employers"> | string
    wkaddress?: StringNullableFilter<"Employers"> | string | null
    btname?: StringNullableFilter<"Employers"> | string | null
    ForeignWorkers?: ForeignWorkersListRelationFilter
  }

  export type EmployersOrderByWithRelationInput = {
    id?: SortOrder
    empname?: SortOrder
    wkaddress?: SortOrderInput | SortOrder
    btname?: SortOrderInput | SortOrder
    ForeignWorkers?: ForeignWorkersOrderByRelationAggregateInput
  }

  export type EmployersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EmployersWhereInput | EmployersWhereInput[]
    OR?: EmployersWhereInput[]
    NOT?: EmployersWhereInput | EmployersWhereInput[]
    empname?: StringFilter<"Employers"> | string
    wkaddress?: StringNullableFilter<"Employers"> | string | null
    btname?: StringNullableFilter<"Employers"> | string | null
    ForeignWorkers?: ForeignWorkersListRelationFilter
  }, "id">

  export type EmployersOrderByWithAggregationInput = {
    id?: SortOrder
    empname?: SortOrder
    wkaddress?: SortOrderInput | SortOrder
    btname?: SortOrderInput | SortOrder
    _count?: EmployersCountOrderByAggregateInput
    _avg?: EmployersAvgOrderByAggregateInput
    _max?: EmployersMaxOrderByAggregateInput
    _min?: EmployersMinOrderByAggregateInput
    _sum?: EmployersSumOrderByAggregateInput
  }

  export type EmployersScalarWhereWithAggregatesInput = {
    AND?: EmployersScalarWhereWithAggregatesInput | EmployersScalarWhereWithAggregatesInput[]
    OR?: EmployersScalarWhereWithAggregatesInput[]
    NOT?: EmployersScalarWhereWithAggregatesInput | EmployersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Employers"> | number
    empname?: StringWithAggregatesFilter<"Employers"> | string
    wkaddress?: StringNullableWithAggregatesFilter<"Employers"> | string | null
    btname?: StringNullableWithAggregatesFilter<"Employers"> | string | null
  }

  export type ForeignWorkersWhereInput = {
    AND?: ForeignWorkersWhereInput | ForeignWorkersWhereInput[]
    OR?: ForeignWorkersWhereInput[]
    NOT?: ForeignWorkersWhereInput | ForeignWorkersWhereInput[]
    id?: IntFilter<"ForeignWorkers"> | number
    employer_id?: IntFilter<"ForeignWorkers"> | number
    alcode?: StringFilter<"ForeignWorkers"> | string
    altype?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefix?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefixen?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_en?: StringFilter<"ForeignWorkers"> | string
    alsname_en?: StringNullableFilter<"ForeignWorkers"> | string | null
    alprefix_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alsname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    albdate?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
    algender?: IntNullableFilter<"ForeignWorkers"> | number | null
    alnation?: StringNullableFilter<"ForeignWorkers"> | string | null
    alposid?: IntNullableFilter<"ForeignWorkers"> | number | null
    blood_group?: StringNullableFilter<"ForeignWorkers"> | string | null
    nickname?: StringNullableFilter<"ForeignWorkers"> | string | null
    religion?: StringNullableFilter<"ForeignWorkers"> | string | null
    phone_number?: StringNullableFilter<"ForeignWorkers"> | string | null
    email?: StringNullableFilter<"ForeignWorkers"> | string | null
    address?: StringNullableFilter<"ForeignWorkers"> | string | null
    subdistrict?: StringNullableFilter<"ForeignWorkers"> | string | null
    district?: StringNullableFilter<"ForeignWorkers"> | string | null
    province?: StringNullableFilter<"ForeignWorkers"> | string | null
    postal_code?: StringNullableFilter<"ForeignWorkers"> | string | null
    remark?: StringNullableFilter<"ForeignWorkers"> | string | null
    isDelete?: BoolFilter<"ForeignWorkers"> | boolean
    createdBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    createdOn?: DateTimeFilter<"ForeignWorkers"> | Date | string
    updatedBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    updatedOn?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
    Employers?: XOR<EmployersScalarRelationFilter, EmployersWhereInput>
    HealthChecks?: HealthChecksListRelationFilter
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type ForeignWorkersOrderByWithRelationInput = {
    id?: SortOrder
    employer_id?: SortOrder
    alcode?: SortOrder
    altype?: SortOrderInput | SortOrder
    alprefix?: SortOrderInput | SortOrder
    alprefixen?: SortOrderInput | SortOrder
    alname_en?: SortOrder
    alsname_en?: SortOrderInput | SortOrder
    alprefix_th?: SortOrderInput | SortOrder
    alname_th?: SortOrderInput | SortOrder
    alsname_th?: SortOrderInput | SortOrder
    albdate?: SortOrderInput | SortOrder
    algender?: SortOrderInput | SortOrder
    alnation?: SortOrderInput | SortOrder
    alposid?: SortOrderInput | SortOrder
    blood_group?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    subdistrict?: SortOrderInput | SortOrder
    district?: SortOrderInput | SortOrder
    province?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    Employers?: EmployersOrderByWithRelationInput
    HealthChecks?: HealthChecksOrderByRelationAggregateInput
    createdByUser?: UsersOrderByWithRelationInput
    updatedByUser?: UsersOrderByWithRelationInput
  }

  export type ForeignWorkersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    alcode?: string
    AND?: ForeignWorkersWhereInput | ForeignWorkersWhereInput[]
    OR?: ForeignWorkersWhereInput[]
    NOT?: ForeignWorkersWhereInput | ForeignWorkersWhereInput[]
    employer_id?: IntFilter<"ForeignWorkers"> | number
    altype?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefix?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefixen?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_en?: StringFilter<"ForeignWorkers"> | string
    alsname_en?: StringNullableFilter<"ForeignWorkers"> | string | null
    alprefix_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alsname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    albdate?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
    algender?: IntNullableFilter<"ForeignWorkers"> | number | null
    alnation?: StringNullableFilter<"ForeignWorkers"> | string | null
    alposid?: IntNullableFilter<"ForeignWorkers"> | number | null
    blood_group?: StringNullableFilter<"ForeignWorkers"> | string | null
    nickname?: StringNullableFilter<"ForeignWorkers"> | string | null
    religion?: StringNullableFilter<"ForeignWorkers"> | string | null
    phone_number?: StringNullableFilter<"ForeignWorkers"> | string | null
    email?: StringNullableFilter<"ForeignWorkers"> | string | null
    address?: StringNullableFilter<"ForeignWorkers"> | string | null
    subdistrict?: StringNullableFilter<"ForeignWorkers"> | string | null
    district?: StringNullableFilter<"ForeignWorkers"> | string | null
    province?: StringNullableFilter<"ForeignWorkers"> | string | null
    postal_code?: StringNullableFilter<"ForeignWorkers"> | string | null
    remark?: StringNullableFilter<"ForeignWorkers"> | string | null
    isDelete?: BoolFilter<"ForeignWorkers"> | boolean
    createdBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    createdOn?: DateTimeFilter<"ForeignWorkers"> | Date | string
    updatedBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    updatedOn?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
    Employers?: XOR<EmployersScalarRelationFilter, EmployersWhereInput>
    HealthChecks?: HealthChecksListRelationFilter
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id" | "alcode">

  export type ForeignWorkersOrderByWithAggregationInput = {
    id?: SortOrder
    employer_id?: SortOrder
    alcode?: SortOrder
    altype?: SortOrderInput | SortOrder
    alprefix?: SortOrderInput | SortOrder
    alprefixen?: SortOrderInput | SortOrder
    alname_en?: SortOrder
    alsname_en?: SortOrderInput | SortOrder
    alprefix_th?: SortOrderInput | SortOrder
    alname_th?: SortOrderInput | SortOrder
    alsname_th?: SortOrderInput | SortOrder
    albdate?: SortOrderInput | SortOrder
    algender?: SortOrderInput | SortOrder
    alnation?: SortOrderInput | SortOrder
    alposid?: SortOrderInput | SortOrder
    blood_group?: SortOrderInput | SortOrder
    nickname?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    phone_number?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    subdistrict?: SortOrderInput | SortOrder
    district?: SortOrderInput | SortOrder
    province?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    remark?: SortOrderInput | SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    _count?: ForeignWorkersCountOrderByAggregateInput
    _avg?: ForeignWorkersAvgOrderByAggregateInput
    _max?: ForeignWorkersMaxOrderByAggregateInput
    _min?: ForeignWorkersMinOrderByAggregateInput
    _sum?: ForeignWorkersSumOrderByAggregateInput
  }

  export type ForeignWorkersScalarWhereWithAggregatesInput = {
    AND?: ForeignWorkersScalarWhereWithAggregatesInput | ForeignWorkersScalarWhereWithAggregatesInput[]
    OR?: ForeignWorkersScalarWhereWithAggregatesInput[]
    NOT?: ForeignWorkersScalarWhereWithAggregatesInput | ForeignWorkersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ForeignWorkers"> | number
    employer_id?: IntWithAggregatesFilter<"ForeignWorkers"> | number
    alcode?: StringWithAggregatesFilter<"ForeignWorkers"> | string
    altype?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    alprefix?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    alprefixen?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    alname_en?: StringWithAggregatesFilter<"ForeignWorkers"> | string
    alsname_en?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    alprefix_th?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    alname_th?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    alsname_th?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    albdate?: DateTimeNullableWithAggregatesFilter<"ForeignWorkers"> | Date | string | null
    algender?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    alnation?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    alposid?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    blood_group?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    nickname?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    religion?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    phone_number?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    email?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    address?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    subdistrict?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    district?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    province?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    postal_code?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    remark?: StringNullableWithAggregatesFilter<"ForeignWorkers"> | string | null
    isDelete?: BoolWithAggregatesFilter<"ForeignWorkers"> | boolean
    createdBy?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    createdOn?: DateTimeWithAggregatesFilter<"ForeignWorkers"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"ForeignWorkers"> | number | null
    updatedOn?: DateTimeNullableWithAggregatesFilter<"ForeignWorkers"> | Date | string | null
  }

  export type HealthChecksWhereInput = {
    AND?: HealthChecksWhereInput | HealthChecksWhereInput[]
    OR?: HealthChecksWhereInput[]
    NOT?: HealthChecksWhereInput | HealthChecksWhereInput[]
    id?: IntFilter<"HealthChecks"> | number
    alcode?: StringFilter<"HealthChecks"> | string
    alchkhos?: StringNullableFilter<"HealthChecks"> | string | null
    alchkstatus?: IntNullableFilter<"HealthChecks"> | number | null
    alchkdate?: DateTimeFilter<"HealthChecks"> | Date | string
    alchkprovid?: StringNullableFilter<"HealthChecks"> | string | null
    licenseno?: StringNullableFilter<"HealthChecks"> | string | null
    chkname?: StringNullableFilter<"HealthChecks"> | string | null
    chkposition?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdesc?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdoc?: StringNullableFilter<"HealthChecks"> | string | null
    isDelete?: BoolFilter<"HealthChecks"> | boolean
    createdBy?: IntNullableFilter<"HealthChecks"> | number | null
    createdOn?: DateTimeFilter<"HealthChecks"> | Date | string
    updatedBy?: IntNullableFilter<"HealthChecks"> | number | null
    updatedOn?: DateTimeNullableFilter<"HealthChecks"> | Date | string | null
    ForeignWorkers?: XOR<ForeignWorkersScalarRelationFilter, ForeignWorkersWhereInput>
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type HealthChecksOrderByWithRelationInput = {
    id?: SortOrder
    alcode?: SortOrder
    alchkhos?: SortOrderInput | SortOrder
    alchkstatus?: SortOrderInput | SortOrder
    alchkdate?: SortOrder
    alchkprovid?: SortOrderInput | SortOrder
    licenseno?: SortOrderInput | SortOrder
    chkname?: SortOrderInput | SortOrder
    chkposition?: SortOrderInput | SortOrder
    alchkdesc?: SortOrderInput | SortOrder
    alchkdoc?: SortOrderInput | SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    ForeignWorkers?: ForeignWorkersOrderByWithRelationInput
    createdByUser?: UsersOrderByWithRelationInput
    updatedByUser?: UsersOrderByWithRelationInput
  }

  export type HealthChecksWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HealthChecksWhereInput | HealthChecksWhereInput[]
    OR?: HealthChecksWhereInput[]
    NOT?: HealthChecksWhereInput | HealthChecksWhereInput[]
    alcode?: StringFilter<"HealthChecks"> | string
    alchkhos?: StringNullableFilter<"HealthChecks"> | string | null
    alchkstatus?: IntNullableFilter<"HealthChecks"> | number | null
    alchkdate?: DateTimeFilter<"HealthChecks"> | Date | string
    alchkprovid?: StringNullableFilter<"HealthChecks"> | string | null
    licenseno?: StringNullableFilter<"HealthChecks"> | string | null
    chkname?: StringNullableFilter<"HealthChecks"> | string | null
    chkposition?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdesc?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdoc?: StringNullableFilter<"HealthChecks"> | string | null
    isDelete?: BoolFilter<"HealthChecks"> | boolean
    createdBy?: IntNullableFilter<"HealthChecks"> | number | null
    createdOn?: DateTimeFilter<"HealthChecks"> | Date | string
    updatedBy?: IntNullableFilter<"HealthChecks"> | number | null
    updatedOn?: DateTimeNullableFilter<"HealthChecks"> | Date | string | null
    ForeignWorkers?: XOR<ForeignWorkersScalarRelationFilter, ForeignWorkersWhereInput>
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id">

  export type HealthChecksOrderByWithAggregationInput = {
    id?: SortOrder
    alcode?: SortOrder
    alchkhos?: SortOrderInput | SortOrder
    alchkstatus?: SortOrderInput | SortOrder
    alchkdate?: SortOrder
    alchkprovid?: SortOrderInput | SortOrder
    licenseno?: SortOrderInput | SortOrder
    chkname?: SortOrderInput | SortOrder
    chkposition?: SortOrderInput | SortOrder
    alchkdesc?: SortOrderInput | SortOrder
    alchkdoc?: SortOrderInput | SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    _count?: HealthChecksCountOrderByAggregateInput
    _avg?: HealthChecksAvgOrderByAggregateInput
    _max?: HealthChecksMaxOrderByAggregateInput
    _min?: HealthChecksMinOrderByAggregateInput
    _sum?: HealthChecksSumOrderByAggregateInput
  }

  export type HealthChecksScalarWhereWithAggregatesInput = {
    AND?: HealthChecksScalarWhereWithAggregatesInput | HealthChecksScalarWhereWithAggregatesInput[]
    OR?: HealthChecksScalarWhereWithAggregatesInput[]
    NOT?: HealthChecksScalarWhereWithAggregatesInput | HealthChecksScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"HealthChecks"> | number
    alcode?: StringWithAggregatesFilter<"HealthChecks"> | string
    alchkhos?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    alchkstatus?: IntNullableWithAggregatesFilter<"HealthChecks"> | number | null
    alchkdate?: DateTimeWithAggregatesFilter<"HealthChecks"> | Date | string
    alchkprovid?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    licenseno?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    chkname?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    chkposition?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    alchkdesc?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    alchkdoc?: StringNullableWithAggregatesFilter<"HealthChecks"> | string | null
    isDelete?: BoolWithAggregatesFilter<"HealthChecks"> | boolean
    createdBy?: IntNullableWithAggregatesFilter<"HealthChecks"> | number | null
    createdOn?: DateTimeWithAggregatesFilter<"HealthChecks"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"HealthChecks"> | number | null
    updatedOn?: DateTimeNullableWithAggregatesFilter<"HealthChecks"> | Date | string | null
  }

  export type ApiRequestsWhereInput = {
    AND?: ApiRequestsWhereInput | ApiRequestsWhereInput[]
    OR?: ApiRequestsWhereInput[]
    NOT?: ApiRequestsWhereInput | ApiRequestsWhereInput[]
    id?: IntFilter<"ApiRequests"> | number
    reqcode?: StringFilter<"ApiRequests"> | string
    isDelete?: BoolFilter<"ApiRequests"> | boolean
    createdBy?: IntNullableFilter<"ApiRequests"> | number | null
    createdOn?: DateTimeFilter<"ApiRequests"> | Date | string
    updatedBy?: IntNullableFilter<"ApiRequests"> | number | null
    updatedOn?: DateTimeNullableFilter<"ApiRequests"> | Date | string | null
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }

  export type ApiRequestsOrderByWithRelationInput = {
    id?: SortOrder
    reqcode?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    createdByUser?: UsersOrderByWithRelationInput
    updatedByUser?: UsersOrderByWithRelationInput
  }

  export type ApiRequestsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: ApiRequestsWhereInput | ApiRequestsWhereInput[]
    OR?: ApiRequestsWhereInput[]
    NOT?: ApiRequestsWhereInput | ApiRequestsWhereInput[]
    reqcode?: StringFilter<"ApiRequests"> | string
    isDelete?: BoolFilter<"ApiRequests"> | boolean
    createdBy?: IntNullableFilter<"ApiRequests"> | number | null
    createdOn?: DateTimeFilter<"ApiRequests"> | Date | string
    updatedBy?: IntNullableFilter<"ApiRequests"> | number | null
    updatedOn?: DateTimeNullableFilter<"ApiRequests"> | Date | string | null
    createdByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
    updatedByUser?: XOR<UsersNullableScalarRelationFilter, UsersWhereInput> | null
  }, "id">

  export type ApiRequestsOrderByWithAggregationInput = {
    id?: SortOrder
    reqcode?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    updatedOn?: SortOrderInput | SortOrder
    _count?: ApiRequestsCountOrderByAggregateInput
    _avg?: ApiRequestsAvgOrderByAggregateInput
    _max?: ApiRequestsMaxOrderByAggregateInput
    _min?: ApiRequestsMinOrderByAggregateInput
    _sum?: ApiRequestsSumOrderByAggregateInput
  }

  export type ApiRequestsScalarWhereWithAggregatesInput = {
    AND?: ApiRequestsScalarWhereWithAggregatesInput | ApiRequestsScalarWhereWithAggregatesInput[]
    OR?: ApiRequestsScalarWhereWithAggregatesInput[]
    NOT?: ApiRequestsScalarWhereWithAggregatesInput | ApiRequestsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ApiRequests"> | number
    reqcode?: StringWithAggregatesFilter<"ApiRequests"> | string
    isDelete?: BoolWithAggregatesFilter<"ApiRequests"> | boolean
    createdBy?: IntNullableWithAggregatesFilter<"ApiRequests"> | number | null
    createdOn?: DateTimeWithAggregatesFilter<"ApiRequests"> | Date | string
    updatedBy?: IntNullableWithAggregatesFilter<"ApiRequests"> | number | null
    updatedOn?: DateTimeNullableWithAggregatesFilter<"ApiRequests"> | Date | string | null
  }

  export type UsersCreateInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersCreateManyInput = {
    id?: number
    username: string
    password: string
  }

  export type UsersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type UsersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
  }

  export type EmployersCreateInput = {
    empname: string
    wkaddress?: string | null
    btname?: string | null
    ForeignWorkers?: ForeignWorkersCreateNestedManyWithoutEmployersInput
  }

  export type EmployersUncheckedCreateInput = {
    id?: number
    empname: string
    wkaddress?: string | null
    btname?: string | null
    ForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutEmployersInput
  }

  export type EmployersUpdateInput = {
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
    ForeignWorkers?: ForeignWorkersUpdateManyWithoutEmployersNestedInput
  }

  export type EmployersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
    ForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutEmployersNestedInput
  }

  export type EmployersCreateManyInput = {
    id?: number
    empname: string
    wkaddress?: string | null
    btname?: string | null
  }

  export type EmployersUpdateManyMutationInput = {
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ForeignWorkersCreateInput = {
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    Employers: EmployersCreateNestedOneWithoutForeignWorkersInput
    HealthChecks?: HealthChecksCreateNestedManyWithoutForeignWorkersInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedForeignWorkersInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedForeignWorkersInput
  }

  export type ForeignWorkersUncheckedCreateInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
    HealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutForeignWorkersInput
  }

  export type ForeignWorkersUpdateInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Employers?: EmployersUpdateOneRequiredWithoutForeignWorkersNestedInput
    HealthChecks?: HealthChecksUpdateManyWithoutForeignWorkersNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedForeignWorkersNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HealthChecks?: HealthChecksUncheckedUpdateManyWithoutForeignWorkersNestedInput
  }

  export type ForeignWorkersCreateManyInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ForeignWorkersUpdateManyMutationInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ForeignWorkersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksCreateInput = {
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    ForeignWorkers: ForeignWorkersCreateNestedOneWithoutHealthChecksInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedHealthChecksInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedHealthChecksInput
  }

  export type HealthChecksUncheckedCreateInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksUpdateInput = {
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ForeignWorkers?: ForeignWorkersUpdateOneRequiredWithoutHealthChecksNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedHealthChecksNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedHealthChecksNestedInput
  }

  export type HealthChecksUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksCreateManyInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksUpdateManyMutationInput = {
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsCreateInput = {
    reqcode: string
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    createdByUser?: UsersCreateNestedOneWithoutCreatedApiRequestsInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedApiRequestsInput
  }

  export type ApiRequestsUncheckedCreateInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ApiRequestsUpdateInput = {
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdByUser?: UsersUpdateOneWithoutCreatedApiRequestsNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedApiRequestsNestedInput
  }

  export type ApiRequestsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsCreateManyInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ApiRequestsUpdateManyMutationInput = {
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type ForeignWorkersListRelationFilter = {
    every?: ForeignWorkersWhereInput
    some?: ForeignWorkersWhereInput
    none?: ForeignWorkersWhereInput
  }

  export type ApiRequestsListRelationFilter = {
    every?: ApiRequestsWhereInput
    some?: ApiRequestsWhereInput
    none?: ApiRequestsWhereInput
  }

  export type HealthChecksListRelationFilter = {
    every?: HealthChecksWhereInput
    some?: HealthChecksWhereInput
    none?: HealthChecksWhereInput
  }

  export type ForeignWorkersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ApiRequestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HealthChecksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UsersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UsersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UsersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    password?: SortOrder
  }

  export type UsersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EmployersCountOrderByAggregateInput = {
    id?: SortOrder
    empname?: SortOrder
    wkaddress?: SortOrder
    btname?: SortOrder
  }

  export type EmployersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EmployersMaxOrderByAggregateInput = {
    id?: SortOrder
    empname?: SortOrder
    wkaddress?: SortOrder
    btname?: SortOrder
  }

  export type EmployersMinOrderByAggregateInput = {
    id?: SortOrder
    empname?: SortOrder
    wkaddress?: SortOrder
    btname?: SortOrder
  }

  export type EmployersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type EmployersScalarRelationFilter = {
    is?: EmployersWhereInput
    isNot?: EmployersWhereInput
  }

  export type UsersNullableScalarRelationFilter = {
    is?: UsersWhereInput | null
    isNot?: UsersWhereInput | null
  }

  export type ForeignWorkersCountOrderByAggregateInput = {
    id?: SortOrder
    employer_id?: SortOrder
    alcode?: SortOrder
    altype?: SortOrder
    alprefix?: SortOrder
    alprefixen?: SortOrder
    alname_en?: SortOrder
    alsname_en?: SortOrder
    alprefix_th?: SortOrder
    alname_th?: SortOrder
    alsname_th?: SortOrder
    albdate?: SortOrder
    algender?: SortOrder
    alnation?: SortOrder
    alposid?: SortOrder
    blood_group?: SortOrder
    nickname?: SortOrder
    religion?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    address?: SortOrder
    subdistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postal_code?: SortOrder
    remark?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ForeignWorkersAvgOrderByAggregateInput = {
    id?: SortOrder
    employer_id?: SortOrder
    altype?: SortOrder
    alprefix?: SortOrder
    algender?: SortOrder
    alposid?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ForeignWorkersMaxOrderByAggregateInput = {
    id?: SortOrder
    employer_id?: SortOrder
    alcode?: SortOrder
    altype?: SortOrder
    alprefix?: SortOrder
    alprefixen?: SortOrder
    alname_en?: SortOrder
    alsname_en?: SortOrder
    alprefix_th?: SortOrder
    alname_th?: SortOrder
    alsname_th?: SortOrder
    albdate?: SortOrder
    algender?: SortOrder
    alnation?: SortOrder
    alposid?: SortOrder
    blood_group?: SortOrder
    nickname?: SortOrder
    religion?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    address?: SortOrder
    subdistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postal_code?: SortOrder
    remark?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ForeignWorkersMinOrderByAggregateInput = {
    id?: SortOrder
    employer_id?: SortOrder
    alcode?: SortOrder
    altype?: SortOrder
    alprefix?: SortOrder
    alprefixen?: SortOrder
    alname_en?: SortOrder
    alsname_en?: SortOrder
    alprefix_th?: SortOrder
    alname_th?: SortOrder
    alsname_th?: SortOrder
    albdate?: SortOrder
    algender?: SortOrder
    alnation?: SortOrder
    alposid?: SortOrder
    blood_group?: SortOrder
    nickname?: SortOrder
    religion?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    address?: SortOrder
    subdistrict?: SortOrder
    district?: SortOrder
    province?: SortOrder
    postal_code?: SortOrder
    remark?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ForeignWorkersSumOrderByAggregateInput = {
    id?: SortOrder
    employer_id?: SortOrder
    altype?: SortOrder
    alprefix?: SortOrder
    algender?: SortOrder
    alposid?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ForeignWorkersScalarRelationFilter = {
    is?: ForeignWorkersWhereInput
    isNot?: ForeignWorkersWhereInput
  }

  export type HealthChecksCountOrderByAggregateInput = {
    id?: SortOrder
    alcode?: SortOrder
    alchkhos?: SortOrder
    alchkstatus?: SortOrder
    alchkdate?: SortOrder
    alchkprovid?: SortOrder
    licenseno?: SortOrder
    chkname?: SortOrder
    chkposition?: SortOrder
    alchkdesc?: SortOrder
    alchkdoc?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type HealthChecksAvgOrderByAggregateInput = {
    id?: SortOrder
    alchkstatus?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type HealthChecksMaxOrderByAggregateInput = {
    id?: SortOrder
    alcode?: SortOrder
    alchkhos?: SortOrder
    alchkstatus?: SortOrder
    alchkdate?: SortOrder
    alchkprovid?: SortOrder
    licenseno?: SortOrder
    chkname?: SortOrder
    chkposition?: SortOrder
    alchkdesc?: SortOrder
    alchkdoc?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type HealthChecksMinOrderByAggregateInput = {
    id?: SortOrder
    alcode?: SortOrder
    alchkhos?: SortOrder
    alchkstatus?: SortOrder
    alchkdate?: SortOrder
    alchkprovid?: SortOrder
    licenseno?: SortOrder
    chkname?: SortOrder
    chkposition?: SortOrder
    alchkdesc?: SortOrder
    alchkdoc?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type HealthChecksSumOrderByAggregateInput = {
    id?: SortOrder
    alchkstatus?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ApiRequestsCountOrderByAggregateInput = {
    id?: SortOrder
    reqcode?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ApiRequestsAvgOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ApiRequestsMaxOrderByAggregateInput = {
    id?: SortOrder
    reqcode?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ApiRequestsMinOrderByAggregateInput = {
    id?: SortOrder
    reqcode?: SortOrder
    isDelete?: SortOrder
    createdBy?: SortOrder
    createdOn?: SortOrder
    updatedBy?: SortOrder
    updatedOn?: SortOrder
  }

  export type ApiRequestsSumOrderByAggregateInput = {
    id?: SortOrder
    createdBy?: SortOrder
    updatedBy?: SortOrder
  }

  export type ForeignWorkersCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput> | ForeignWorkersCreateWithoutCreatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutCreatedByUserInput | ForeignWorkersCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ForeignWorkersCreateManyCreatedByUserInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput> | ForeignWorkersCreateWithoutUpdatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput | ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ForeignWorkersCreateManyUpdatedByUserInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type ApiRequestsCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput> | ApiRequestsCreateWithoutCreatedByUserInput[] | ApiRequestsUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutCreatedByUserInput | ApiRequestsCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ApiRequestsCreateManyCreatedByUserInputEnvelope
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
  }

  export type ApiRequestsCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput> | ApiRequestsCreateWithoutUpdatedByUserInput[] | ApiRequestsUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutUpdatedByUserInput | ApiRequestsCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ApiRequestsCreateManyUpdatedByUserInputEnvelope
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
  }

  export type HealthChecksCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput> | HealthChecksCreateWithoutCreatedByUserInput[] | HealthChecksUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutCreatedByUserInput | HealthChecksCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: HealthChecksCreateManyCreatedByUserInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type HealthChecksCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput> | HealthChecksCreateWithoutUpdatedByUserInput[] | HealthChecksUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutUpdatedByUserInput | HealthChecksCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: HealthChecksCreateManyUpdatedByUserInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput> | ForeignWorkersCreateWithoutCreatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutCreatedByUserInput | ForeignWorkersCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ForeignWorkersCreateManyCreatedByUserInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput> | ForeignWorkersCreateWithoutUpdatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput | ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ForeignWorkersCreateManyUpdatedByUserInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput> | ApiRequestsCreateWithoutCreatedByUserInput[] | ApiRequestsUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutCreatedByUserInput | ApiRequestsCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: ApiRequestsCreateManyCreatedByUserInputEnvelope
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
  }

  export type ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput> | ApiRequestsCreateWithoutUpdatedByUserInput[] | ApiRequestsUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutUpdatedByUserInput | ApiRequestsCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: ApiRequestsCreateManyUpdatedByUserInputEnvelope
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
  }

  export type HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput = {
    create?: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput> | HealthChecksCreateWithoutCreatedByUserInput[] | HealthChecksUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutCreatedByUserInput | HealthChecksCreateOrConnectWithoutCreatedByUserInput[]
    createMany?: HealthChecksCreateManyCreatedByUserInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput = {
    create?: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput> | HealthChecksCreateWithoutUpdatedByUserInput[] | HealthChecksUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutUpdatedByUserInput | HealthChecksCreateOrConnectWithoutUpdatedByUserInput[]
    createMany?: HealthChecksCreateManyUpdatedByUserInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput> | ForeignWorkersCreateWithoutCreatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutCreatedByUserInput | ForeignWorkersCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutCreatedByUserInput | ForeignWorkersUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ForeignWorkersCreateManyCreatedByUserInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutCreatedByUserInput | ForeignWorkersUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutCreatedByUserInput | ForeignWorkersUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput> | ForeignWorkersCreateWithoutUpdatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput | ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutUpdatedByUserInput | ForeignWorkersUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ForeignWorkersCreateManyUpdatedByUserInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutUpdatedByUserInput | ForeignWorkersUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutUpdatedByUserInput | ForeignWorkersUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type ApiRequestsUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput> | ApiRequestsCreateWithoutCreatedByUserInput[] | ApiRequestsUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutCreatedByUserInput | ApiRequestsCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ApiRequestsUpsertWithWhereUniqueWithoutCreatedByUserInput | ApiRequestsUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ApiRequestsCreateManyCreatedByUserInputEnvelope
    set?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    disconnect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    delete?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    update?: ApiRequestsUpdateWithWhereUniqueWithoutCreatedByUserInput | ApiRequestsUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ApiRequestsUpdateManyWithWhereWithoutCreatedByUserInput | ApiRequestsUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
  }

  export type ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput> | ApiRequestsCreateWithoutUpdatedByUserInput[] | ApiRequestsUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutUpdatedByUserInput | ApiRequestsCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ApiRequestsUpsertWithWhereUniqueWithoutUpdatedByUserInput | ApiRequestsUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ApiRequestsCreateManyUpdatedByUserInputEnvelope
    set?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    disconnect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    delete?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    update?: ApiRequestsUpdateWithWhereUniqueWithoutUpdatedByUserInput | ApiRequestsUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ApiRequestsUpdateManyWithWhereWithoutUpdatedByUserInput | ApiRequestsUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
  }

  export type HealthChecksUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput> | HealthChecksCreateWithoutCreatedByUserInput[] | HealthChecksUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutCreatedByUserInput | HealthChecksCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutCreatedByUserInput | HealthChecksUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: HealthChecksCreateManyCreatedByUserInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutCreatedByUserInput | HealthChecksUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutCreatedByUserInput | HealthChecksUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type HealthChecksUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput> | HealthChecksCreateWithoutUpdatedByUserInput[] | HealthChecksUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutUpdatedByUserInput | HealthChecksCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutUpdatedByUserInput | HealthChecksUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: HealthChecksCreateManyUpdatedByUserInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutUpdatedByUserInput | HealthChecksUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutUpdatedByUserInput | HealthChecksUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput> | ForeignWorkersCreateWithoutCreatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutCreatedByUserInput | ForeignWorkersCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutCreatedByUserInput | ForeignWorkersUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ForeignWorkersCreateManyCreatedByUserInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutCreatedByUserInput | ForeignWorkersUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutCreatedByUserInput | ForeignWorkersUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput> | ForeignWorkersCreateWithoutUpdatedByUserInput[] | ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput | ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutUpdatedByUserInput | ForeignWorkersUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ForeignWorkersCreateManyUpdatedByUserInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutUpdatedByUserInput | ForeignWorkersUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutUpdatedByUserInput | ForeignWorkersUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput> | ApiRequestsCreateWithoutCreatedByUserInput[] | ApiRequestsUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutCreatedByUserInput | ApiRequestsCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: ApiRequestsUpsertWithWhereUniqueWithoutCreatedByUserInput | ApiRequestsUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: ApiRequestsCreateManyCreatedByUserInputEnvelope
    set?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    disconnect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    delete?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    update?: ApiRequestsUpdateWithWhereUniqueWithoutCreatedByUserInput | ApiRequestsUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: ApiRequestsUpdateManyWithWhereWithoutCreatedByUserInput | ApiRequestsUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
  }

  export type ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput> | ApiRequestsCreateWithoutUpdatedByUserInput[] | ApiRequestsUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: ApiRequestsCreateOrConnectWithoutUpdatedByUserInput | ApiRequestsCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: ApiRequestsUpsertWithWhereUniqueWithoutUpdatedByUserInput | ApiRequestsUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: ApiRequestsCreateManyUpdatedByUserInputEnvelope
    set?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    disconnect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    delete?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    connect?: ApiRequestsWhereUniqueInput | ApiRequestsWhereUniqueInput[]
    update?: ApiRequestsUpdateWithWhereUniqueWithoutUpdatedByUserInput | ApiRequestsUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: ApiRequestsUpdateManyWithWhereWithoutUpdatedByUserInput | ApiRequestsUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
  }

  export type HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput = {
    create?: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput> | HealthChecksCreateWithoutCreatedByUserInput[] | HealthChecksUncheckedCreateWithoutCreatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutCreatedByUserInput | HealthChecksCreateOrConnectWithoutCreatedByUserInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutCreatedByUserInput | HealthChecksUpsertWithWhereUniqueWithoutCreatedByUserInput[]
    createMany?: HealthChecksCreateManyCreatedByUserInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutCreatedByUserInput | HealthChecksUpdateWithWhereUniqueWithoutCreatedByUserInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutCreatedByUserInput | HealthChecksUpdateManyWithWhereWithoutCreatedByUserInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput = {
    create?: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput> | HealthChecksCreateWithoutUpdatedByUserInput[] | HealthChecksUncheckedCreateWithoutUpdatedByUserInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutUpdatedByUserInput | HealthChecksCreateOrConnectWithoutUpdatedByUserInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutUpdatedByUserInput | HealthChecksUpsertWithWhereUniqueWithoutUpdatedByUserInput[]
    createMany?: HealthChecksCreateManyUpdatedByUserInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutUpdatedByUserInput | HealthChecksUpdateWithWhereUniqueWithoutUpdatedByUserInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutUpdatedByUserInput | HealthChecksUpdateManyWithWhereWithoutUpdatedByUserInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type ForeignWorkersCreateNestedManyWithoutEmployersInput = {
    create?: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput> | ForeignWorkersCreateWithoutEmployersInput[] | ForeignWorkersUncheckedCreateWithoutEmployersInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutEmployersInput | ForeignWorkersCreateOrConnectWithoutEmployersInput[]
    createMany?: ForeignWorkersCreateManyEmployersInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type ForeignWorkersUncheckedCreateNestedManyWithoutEmployersInput = {
    create?: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput> | ForeignWorkersCreateWithoutEmployersInput[] | ForeignWorkersUncheckedCreateWithoutEmployersInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutEmployersInput | ForeignWorkersCreateOrConnectWithoutEmployersInput[]
    createMany?: ForeignWorkersCreateManyEmployersInputEnvelope
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ForeignWorkersUpdateManyWithoutEmployersNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput> | ForeignWorkersCreateWithoutEmployersInput[] | ForeignWorkersUncheckedCreateWithoutEmployersInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutEmployersInput | ForeignWorkersCreateOrConnectWithoutEmployersInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutEmployersInput | ForeignWorkersUpsertWithWhereUniqueWithoutEmployersInput[]
    createMany?: ForeignWorkersCreateManyEmployersInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutEmployersInput | ForeignWorkersUpdateWithWhereUniqueWithoutEmployersInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutEmployersInput | ForeignWorkersUpdateManyWithWhereWithoutEmployersInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutEmployersNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput> | ForeignWorkersCreateWithoutEmployersInput[] | ForeignWorkersUncheckedCreateWithoutEmployersInput[]
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutEmployersInput | ForeignWorkersCreateOrConnectWithoutEmployersInput[]
    upsert?: ForeignWorkersUpsertWithWhereUniqueWithoutEmployersInput | ForeignWorkersUpsertWithWhereUniqueWithoutEmployersInput[]
    createMany?: ForeignWorkersCreateManyEmployersInputEnvelope
    set?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    disconnect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    delete?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    connect?: ForeignWorkersWhereUniqueInput | ForeignWorkersWhereUniqueInput[]
    update?: ForeignWorkersUpdateWithWhereUniqueWithoutEmployersInput | ForeignWorkersUpdateWithWhereUniqueWithoutEmployersInput[]
    updateMany?: ForeignWorkersUpdateManyWithWhereWithoutEmployersInput | ForeignWorkersUpdateManyWithWhereWithoutEmployersInput[]
    deleteMany?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
  }

  export type EmployersCreateNestedOneWithoutForeignWorkersInput = {
    create?: XOR<EmployersCreateWithoutForeignWorkersInput, EmployersUncheckedCreateWithoutForeignWorkersInput>
    connectOrCreate?: EmployersCreateOrConnectWithoutForeignWorkersInput
    connect?: EmployersWhereUniqueInput
  }

  export type HealthChecksCreateNestedManyWithoutForeignWorkersInput = {
    create?: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput> | HealthChecksCreateWithoutForeignWorkersInput[] | HealthChecksUncheckedCreateWithoutForeignWorkersInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutForeignWorkersInput | HealthChecksCreateOrConnectWithoutForeignWorkersInput[]
    createMany?: HealthChecksCreateManyForeignWorkersInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type UsersCreateNestedOneWithoutCreatedForeignWorkersInput = {
    create?: XOR<UsersCreateWithoutCreatedForeignWorkersInput, UsersUncheckedCreateWithoutCreatedForeignWorkersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedForeignWorkersInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUpdatedForeignWorkersInput = {
    create?: XOR<UsersCreateWithoutUpdatedForeignWorkersInput, UsersUncheckedCreateWithoutUpdatedForeignWorkersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedForeignWorkersInput
    connect?: UsersWhereUniqueInput
  }

  export type HealthChecksUncheckedCreateNestedManyWithoutForeignWorkersInput = {
    create?: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput> | HealthChecksCreateWithoutForeignWorkersInput[] | HealthChecksUncheckedCreateWithoutForeignWorkersInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutForeignWorkersInput | HealthChecksCreateOrConnectWithoutForeignWorkersInput[]
    createMany?: HealthChecksCreateManyForeignWorkersInputEnvelope
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EmployersUpdateOneRequiredWithoutForeignWorkersNestedInput = {
    create?: XOR<EmployersCreateWithoutForeignWorkersInput, EmployersUncheckedCreateWithoutForeignWorkersInput>
    connectOrCreate?: EmployersCreateOrConnectWithoutForeignWorkersInput
    upsert?: EmployersUpsertWithoutForeignWorkersInput
    connect?: EmployersWhereUniqueInput
    update?: XOR<XOR<EmployersUpdateToOneWithWhereWithoutForeignWorkersInput, EmployersUpdateWithoutForeignWorkersInput>, EmployersUncheckedUpdateWithoutForeignWorkersInput>
  }

  export type HealthChecksUpdateManyWithoutForeignWorkersNestedInput = {
    create?: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput> | HealthChecksCreateWithoutForeignWorkersInput[] | HealthChecksUncheckedCreateWithoutForeignWorkersInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutForeignWorkersInput | HealthChecksCreateOrConnectWithoutForeignWorkersInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutForeignWorkersInput | HealthChecksUpsertWithWhereUniqueWithoutForeignWorkersInput[]
    createMany?: HealthChecksCreateManyForeignWorkersInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutForeignWorkersInput | HealthChecksUpdateWithWhereUniqueWithoutForeignWorkersInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutForeignWorkersInput | HealthChecksUpdateManyWithWhereWithoutForeignWorkersInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type UsersUpdateOneWithoutCreatedForeignWorkersNestedInput = {
    create?: XOR<UsersCreateWithoutCreatedForeignWorkersInput, UsersUncheckedCreateWithoutCreatedForeignWorkersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedForeignWorkersInput
    upsert?: UsersUpsertWithoutCreatedForeignWorkersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCreatedForeignWorkersInput, UsersUpdateWithoutCreatedForeignWorkersInput>, UsersUncheckedUpdateWithoutCreatedForeignWorkersInput>
  }

  export type UsersUpdateOneWithoutUpdatedForeignWorkersNestedInput = {
    create?: XOR<UsersCreateWithoutUpdatedForeignWorkersInput, UsersUncheckedCreateWithoutUpdatedForeignWorkersInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedForeignWorkersInput
    upsert?: UsersUpsertWithoutUpdatedForeignWorkersInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutUpdatedForeignWorkersInput, UsersUpdateWithoutUpdatedForeignWorkersInput>, UsersUncheckedUpdateWithoutUpdatedForeignWorkersInput>
  }

  export type HealthChecksUncheckedUpdateManyWithoutForeignWorkersNestedInput = {
    create?: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput> | HealthChecksCreateWithoutForeignWorkersInput[] | HealthChecksUncheckedCreateWithoutForeignWorkersInput[]
    connectOrCreate?: HealthChecksCreateOrConnectWithoutForeignWorkersInput | HealthChecksCreateOrConnectWithoutForeignWorkersInput[]
    upsert?: HealthChecksUpsertWithWhereUniqueWithoutForeignWorkersInput | HealthChecksUpsertWithWhereUniqueWithoutForeignWorkersInput[]
    createMany?: HealthChecksCreateManyForeignWorkersInputEnvelope
    set?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    disconnect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    delete?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    connect?: HealthChecksWhereUniqueInput | HealthChecksWhereUniqueInput[]
    update?: HealthChecksUpdateWithWhereUniqueWithoutForeignWorkersInput | HealthChecksUpdateWithWhereUniqueWithoutForeignWorkersInput[]
    updateMany?: HealthChecksUpdateManyWithWhereWithoutForeignWorkersInput | HealthChecksUpdateManyWithWhereWithoutForeignWorkersInput[]
    deleteMany?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
  }

  export type ForeignWorkersCreateNestedOneWithoutHealthChecksInput = {
    create?: XOR<ForeignWorkersCreateWithoutHealthChecksInput, ForeignWorkersUncheckedCreateWithoutHealthChecksInput>
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutHealthChecksInput
    connect?: ForeignWorkersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutCreatedHealthChecksInput = {
    create?: XOR<UsersCreateWithoutCreatedHealthChecksInput, UsersUncheckedCreateWithoutCreatedHealthChecksInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedHealthChecksInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUpdatedHealthChecksInput = {
    create?: XOR<UsersCreateWithoutUpdatedHealthChecksInput, UsersUncheckedCreateWithoutUpdatedHealthChecksInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedHealthChecksInput
    connect?: UsersWhereUniqueInput
  }

  export type ForeignWorkersUpdateOneRequiredWithoutHealthChecksNestedInput = {
    create?: XOR<ForeignWorkersCreateWithoutHealthChecksInput, ForeignWorkersUncheckedCreateWithoutHealthChecksInput>
    connectOrCreate?: ForeignWorkersCreateOrConnectWithoutHealthChecksInput
    upsert?: ForeignWorkersUpsertWithoutHealthChecksInput
    connect?: ForeignWorkersWhereUniqueInput
    update?: XOR<XOR<ForeignWorkersUpdateToOneWithWhereWithoutHealthChecksInput, ForeignWorkersUpdateWithoutHealthChecksInput>, ForeignWorkersUncheckedUpdateWithoutHealthChecksInput>
  }

  export type UsersUpdateOneWithoutCreatedHealthChecksNestedInput = {
    create?: XOR<UsersCreateWithoutCreatedHealthChecksInput, UsersUncheckedCreateWithoutCreatedHealthChecksInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedHealthChecksInput
    upsert?: UsersUpsertWithoutCreatedHealthChecksInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCreatedHealthChecksInput, UsersUpdateWithoutCreatedHealthChecksInput>, UsersUncheckedUpdateWithoutCreatedHealthChecksInput>
  }

  export type UsersUpdateOneWithoutUpdatedHealthChecksNestedInput = {
    create?: XOR<UsersCreateWithoutUpdatedHealthChecksInput, UsersUncheckedCreateWithoutUpdatedHealthChecksInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedHealthChecksInput
    upsert?: UsersUpsertWithoutUpdatedHealthChecksInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutUpdatedHealthChecksInput, UsersUpdateWithoutUpdatedHealthChecksInput>, UsersUncheckedUpdateWithoutUpdatedHealthChecksInput>
  }

  export type UsersCreateNestedOneWithoutCreatedApiRequestsInput = {
    create?: XOR<UsersCreateWithoutCreatedApiRequestsInput, UsersUncheckedCreateWithoutCreatedApiRequestsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedApiRequestsInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersCreateNestedOneWithoutUpdatedApiRequestsInput = {
    create?: XOR<UsersCreateWithoutUpdatedApiRequestsInput, UsersUncheckedCreateWithoutUpdatedApiRequestsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedApiRequestsInput
    connect?: UsersWhereUniqueInput
  }

  export type UsersUpdateOneWithoutCreatedApiRequestsNestedInput = {
    create?: XOR<UsersCreateWithoutCreatedApiRequestsInput, UsersUncheckedCreateWithoutCreatedApiRequestsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutCreatedApiRequestsInput
    upsert?: UsersUpsertWithoutCreatedApiRequestsInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutCreatedApiRequestsInput, UsersUpdateWithoutCreatedApiRequestsInput>, UsersUncheckedUpdateWithoutCreatedApiRequestsInput>
  }

  export type UsersUpdateOneWithoutUpdatedApiRequestsNestedInput = {
    create?: XOR<UsersCreateWithoutUpdatedApiRequestsInput, UsersUncheckedCreateWithoutUpdatedApiRequestsInput>
    connectOrCreate?: UsersCreateOrConnectWithoutUpdatedApiRequestsInput
    upsert?: UsersUpsertWithoutUpdatedApiRequestsInput
    disconnect?: UsersWhereInput | boolean
    delete?: UsersWhereInput | boolean
    connect?: UsersWhereUniqueInput
    update?: XOR<XOR<UsersUpdateToOneWithWhereWithoutUpdatedApiRequestsInput, UsersUpdateWithoutUpdatedApiRequestsInput>, UsersUncheckedUpdateWithoutUpdatedApiRequestsInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type ForeignWorkersCreateWithoutCreatedByUserInput = {
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    Employers: EmployersCreateNestedOneWithoutForeignWorkersInput
    HealthChecks?: HealthChecksCreateNestedManyWithoutForeignWorkersInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedForeignWorkersInput
  }

  export type ForeignWorkersUncheckedCreateWithoutCreatedByUserInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
    HealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutForeignWorkersInput
  }

  export type ForeignWorkersCreateOrConnectWithoutCreatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    create: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ForeignWorkersCreateManyCreatedByUserInputEnvelope = {
    data: ForeignWorkersCreateManyCreatedByUserInput | ForeignWorkersCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ForeignWorkersCreateWithoutUpdatedByUserInput = {
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    Employers: EmployersCreateNestedOneWithoutForeignWorkersInput
    HealthChecks?: HealthChecksCreateNestedManyWithoutForeignWorkersInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedForeignWorkersInput
  }

  export type ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
    HealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutForeignWorkersInput
  }

  export type ForeignWorkersCreateOrConnectWithoutUpdatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    create: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ForeignWorkersCreateManyUpdatedByUserInputEnvelope = {
    data: ForeignWorkersCreateManyUpdatedByUserInput | ForeignWorkersCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ApiRequestsCreateWithoutCreatedByUserInput = {
    reqcode: string
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedApiRequestsInput
  }

  export type ApiRequestsUncheckedCreateWithoutCreatedByUserInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ApiRequestsCreateOrConnectWithoutCreatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    create: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ApiRequestsCreateManyCreatedByUserInputEnvelope = {
    data: ApiRequestsCreateManyCreatedByUserInput | ApiRequestsCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ApiRequestsCreateWithoutUpdatedByUserInput = {
    reqcode: string
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    createdByUser?: UsersCreateNestedOneWithoutCreatedApiRequestsInput
  }

  export type ApiRequestsUncheckedCreateWithoutUpdatedByUserInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
  }

  export type ApiRequestsCreateOrConnectWithoutUpdatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    create: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ApiRequestsCreateManyUpdatedByUserInputEnvelope = {
    data: ApiRequestsCreateManyUpdatedByUserInput | ApiRequestsCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type HealthChecksCreateWithoutCreatedByUserInput = {
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    ForeignWorkers: ForeignWorkersCreateNestedOneWithoutHealthChecksInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedHealthChecksInput
  }

  export type HealthChecksUncheckedCreateWithoutCreatedByUserInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksCreateOrConnectWithoutCreatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    create: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput>
  }

  export type HealthChecksCreateManyCreatedByUserInputEnvelope = {
    data: HealthChecksCreateManyCreatedByUserInput | HealthChecksCreateManyCreatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type HealthChecksCreateWithoutUpdatedByUserInput = {
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    ForeignWorkers: ForeignWorkersCreateNestedOneWithoutHealthChecksInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedHealthChecksInput
  }

  export type HealthChecksUncheckedCreateWithoutUpdatedByUserInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
  }

  export type HealthChecksCreateOrConnectWithoutUpdatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    create: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type HealthChecksCreateManyUpdatedByUserInputEnvelope = {
    data: HealthChecksCreateManyUpdatedByUserInput | HealthChecksCreateManyUpdatedByUserInput[]
    skipDuplicates?: boolean
  }

  export type ForeignWorkersUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    update: XOR<ForeignWorkersUpdateWithoutCreatedByUserInput, ForeignWorkersUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<ForeignWorkersCreateWithoutCreatedByUserInput, ForeignWorkersUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ForeignWorkersUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    data: XOR<ForeignWorkersUpdateWithoutCreatedByUserInput, ForeignWorkersUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type ForeignWorkersUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: ForeignWorkersScalarWhereInput
    data: XOR<ForeignWorkersUpdateManyMutationInput, ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type ForeignWorkersScalarWhereInput = {
    AND?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
    OR?: ForeignWorkersScalarWhereInput[]
    NOT?: ForeignWorkersScalarWhereInput | ForeignWorkersScalarWhereInput[]
    id?: IntFilter<"ForeignWorkers"> | number
    employer_id?: IntFilter<"ForeignWorkers"> | number
    alcode?: StringFilter<"ForeignWorkers"> | string
    altype?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefix?: IntNullableFilter<"ForeignWorkers"> | number | null
    alprefixen?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_en?: StringFilter<"ForeignWorkers"> | string
    alsname_en?: StringNullableFilter<"ForeignWorkers"> | string | null
    alprefix_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    alsname_th?: StringNullableFilter<"ForeignWorkers"> | string | null
    albdate?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
    algender?: IntNullableFilter<"ForeignWorkers"> | number | null
    alnation?: StringNullableFilter<"ForeignWorkers"> | string | null
    alposid?: IntNullableFilter<"ForeignWorkers"> | number | null
    blood_group?: StringNullableFilter<"ForeignWorkers"> | string | null
    nickname?: StringNullableFilter<"ForeignWorkers"> | string | null
    religion?: StringNullableFilter<"ForeignWorkers"> | string | null
    phone_number?: StringNullableFilter<"ForeignWorkers"> | string | null
    email?: StringNullableFilter<"ForeignWorkers"> | string | null
    address?: StringNullableFilter<"ForeignWorkers"> | string | null
    subdistrict?: StringNullableFilter<"ForeignWorkers"> | string | null
    district?: StringNullableFilter<"ForeignWorkers"> | string | null
    province?: StringNullableFilter<"ForeignWorkers"> | string | null
    postal_code?: StringNullableFilter<"ForeignWorkers"> | string | null
    remark?: StringNullableFilter<"ForeignWorkers"> | string | null
    isDelete?: BoolFilter<"ForeignWorkers"> | boolean
    createdBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    createdOn?: DateTimeFilter<"ForeignWorkers"> | Date | string
    updatedBy?: IntNullableFilter<"ForeignWorkers"> | number | null
    updatedOn?: DateTimeNullableFilter<"ForeignWorkers"> | Date | string | null
  }

  export type ForeignWorkersUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    update: XOR<ForeignWorkersUpdateWithoutUpdatedByUserInput, ForeignWorkersUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<ForeignWorkersCreateWithoutUpdatedByUserInput, ForeignWorkersUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ForeignWorkersUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ForeignWorkersWhereUniqueInput
    data: XOR<ForeignWorkersUpdateWithoutUpdatedByUserInput, ForeignWorkersUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type ForeignWorkersUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: ForeignWorkersScalarWhereInput
    data: XOR<ForeignWorkersUpdateManyMutationInput, ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type ApiRequestsUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    update: XOR<ApiRequestsUpdateWithoutCreatedByUserInput, ApiRequestsUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<ApiRequestsCreateWithoutCreatedByUserInput, ApiRequestsUncheckedCreateWithoutCreatedByUserInput>
  }

  export type ApiRequestsUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    data: XOR<ApiRequestsUpdateWithoutCreatedByUserInput, ApiRequestsUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type ApiRequestsUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: ApiRequestsScalarWhereInput
    data: XOR<ApiRequestsUpdateManyMutationInput, ApiRequestsUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type ApiRequestsScalarWhereInput = {
    AND?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
    OR?: ApiRequestsScalarWhereInput[]
    NOT?: ApiRequestsScalarWhereInput | ApiRequestsScalarWhereInput[]
    id?: IntFilter<"ApiRequests"> | number
    reqcode?: StringFilter<"ApiRequests"> | string
    isDelete?: BoolFilter<"ApiRequests"> | boolean
    createdBy?: IntNullableFilter<"ApiRequests"> | number | null
    createdOn?: DateTimeFilter<"ApiRequests"> | Date | string
    updatedBy?: IntNullableFilter<"ApiRequests"> | number | null
    updatedOn?: DateTimeNullableFilter<"ApiRequests"> | Date | string | null
  }

  export type ApiRequestsUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    update: XOR<ApiRequestsUpdateWithoutUpdatedByUserInput, ApiRequestsUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<ApiRequestsCreateWithoutUpdatedByUserInput, ApiRequestsUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type ApiRequestsUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: ApiRequestsWhereUniqueInput
    data: XOR<ApiRequestsUpdateWithoutUpdatedByUserInput, ApiRequestsUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type ApiRequestsUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: ApiRequestsScalarWhereInput
    data: XOR<ApiRequestsUpdateManyMutationInput, ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type HealthChecksUpsertWithWhereUniqueWithoutCreatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    update: XOR<HealthChecksUpdateWithoutCreatedByUserInput, HealthChecksUncheckedUpdateWithoutCreatedByUserInput>
    create: XOR<HealthChecksCreateWithoutCreatedByUserInput, HealthChecksUncheckedCreateWithoutCreatedByUserInput>
  }

  export type HealthChecksUpdateWithWhereUniqueWithoutCreatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    data: XOR<HealthChecksUpdateWithoutCreatedByUserInput, HealthChecksUncheckedUpdateWithoutCreatedByUserInput>
  }

  export type HealthChecksUpdateManyWithWhereWithoutCreatedByUserInput = {
    where: HealthChecksScalarWhereInput
    data: XOR<HealthChecksUpdateManyMutationInput, HealthChecksUncheckedUpdateManyWithoutCreatedByUserInput>
  }

  export type HealthChecksScalarWhereInput = {
    AND?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
    OR?: HealthChecksScalarWhereInput[]
    NOT?: HealthChecksScalarWhereInput | HealthChecksScalarWhereInput[]
    id?: IntFilter<"HealthChecks"> | number
    alcode?: StringFilter<"HealthChecks"> | string
    alchkhos?: StringNullableFilter<"HealthChecks"> | string | null
    alchkstatus?: IntNullableFilter<"HealthChecks"> | number | null
    alchkdate?: DateTimeFilter<"HealthChecks"> | Date | string
    alchkprovid?: StringNullableFilter<"HealthChecks"> | string | null
    licenseno?: StringNullableFilter<"HealthChecks"> | string | null
    chkname?: StringNullableFilter<"HealthChecks"> | string | null
    chkposition?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdesc?: StringNullableFilter<"HealthChecks"> | string | null
    alchkdoc?: StringNullableFilter<"HealthChecks"> | string | null
    isDelete?: BoolFilter<"HealthChecks"> | boolean
    createdBy?: IntNullableFilter<"HealthChecks"> | number | null
    createdOn?: DateTimeFilter<"HealthChecks"> | Date | string
    updatedBy?: IntNullableFilter<"HealthChecks"> | number | null
    updatedOn?: DateTimeNullableFilter<"HealthChecks"> | Date | string | null
  }

  export type HealthChecksUpsertWithWhereUniqueWithoutUpdatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    update: XOR<HealthChecksUpdateWithoutUpdatedByUserInput, HealthChecksUncheckedUpdateWithoutUpdatedByUserInput>
    create: XOR<HealthChecksCreateWithoutUpdatedByUserInput, HealthChecksUncheckedCreateWithoutUpdatedByUserInput>
  }

  export type HealthChecksUpdateWithWhereUniqueWithoutUpdatedByUserInput = {
    where: HealthChecksWhereUniqueInput
    data: XOR<HealthChecksUpdateWithoutUpdatedByUserInput, HealthChecksUncheckedUpdateWithoutUpdatedByUserInput>
  }

  export type HealthChecksUpdateManyWithWhereWithoutUpdatedByUserInput = {
    where: HealthChecksScalarWhereInput
    data: XOR<HealthChecksUpdateManyMutationInput, HealthChecksUncheckedUpdateManyWithoutUpdatedByUserInput>
  }

  export type ForeignWorkersCreateWithoutEmployersInput = {
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    HealthChecks?: HealthChecksCreateNestedManyWithoutForeignWorkersInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedForeignWorkersInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedForeignWorkersInput
  }

  export type ForeignWorkersUncheckedCreateWithoutEmployersInput = {
    id?: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
    HealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutForeignWorkersInput
  }

  export type ForeignWorkersCreateOrConnectWithoutEmployersInput = {
    where: ForeignWorkersWhereUniqueInput
    create: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput>
  }

  export type ForeignWorkersCreateManyEmployersInputEnvelope = {
    data: ForeignWorkersCreateManyEmployersInput | ForeignWorkersCreateManyEmployersInput[]
    skipDuplicates?: boolean
  }

  export type ForeignWorkersUpsertWithWhereUniqueWithoutEmployersInput = {
    where: ForeignWorkersWhereUniqueInput
    update: XOR<ForeignWorkersUpdateWithoutEmployersInput, ForeignWorkersUncheckedUpdateWithoutEmployersInput>
    create: XOR<ForeignWorkersCreateWithoutEmployersInput, ForeignWorkersUncheckedCreateWithoutEmployersInput>
  }

  export type ForeignWorkersUpdateWithWhereUniqueWithoutEmployersInput = {
    where: ForeignWorkersWhereUniqueInput
    data: XOR<ForeignWorkersUpdateWithoutEmployersInput, ForeignWorkersUncheckedUpdateWithoutEmployersInput>
  }

  export type ForeignWorkersUpdateManyWithWhereWithoutEmployersInput = {
    where: ForeignWorkersScalarWhereInput
    data: XOR<ForeignWorkersUpdateManyMutationInput, ForeignWorkersUncheckedUpdateManyWithoutEmployersInput>
  }

  export type EmployersCreateWithoutForeignWorkersInput = {
    empname: string
    wkaddress?: string | null
    btname?: string | null
  }

  export type EmployersUncheckedCreateWithoutForeignWorkersInput = {
    id?: number
    empname: string
    wkaddress?: string | null
    btname?: string | null
  }

  export type EmployersCreateOrConnectWithoutForeignWorkersInput = {
    where: EmployersWhereUniqueInput
    create: XOR<EmployersCreateWithoutForeignWorkersInput, EmployersUncheckedCreateWithoutForeignWorkersInput>
  }

  export type HealthChecksCreateWithoutForeignWorkersInput = {
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    createdByUser?: UsersCreateNestedOneWithoutCreatedHealthChecksInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedHealthChecksInput
  }

  export type HealthChecksUncheckedCreateWithoutForeignWorkersInput = {
    id?: number
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksCreateOrConnectWithoutForeignWorkersInput = {
    where: HealthChecksWhereUniqueInput
    create: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput>
  }

  export type HealthChecksCreateManyForeignWorkersInputEnvelope = {
    data: HealthChecksCreateManyForeignWorkersInput | HealthChecksCreateManyForeignWorkersInput[]
    skipDuplicates?: boolean
  }

  export type UsersCreateWithoutCreatedForeignWorkersInput = {
    username: string
    password: string
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateWithoutCreatedForeignWorkersInput = {
    id?: number
    username: string
    password: string
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersCreateOrConnectWithoutCreatedForeignWorkersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCreatedForeignWorkersInput, UsersUncheckedCreateWithoutCreatedForeignWorkersInput>
  }

  export type UsersCreateWithoutUpdatedForeignWorkersInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateWithoutUpdatedForeignWorkersInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersCreateOrConnectWithoutUpdatedForeignWorkersInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUpdatedForeignWorkersInput, UsersUncheckedCreateWithoutUpdatedForeignWorkersInput>
  }

  export type EmployersUpsertWithoutForeignWorkersInput = {
    update: XOR<EmployersUpdateWithoutForeignWorkersInput, EmployersUncheckedUpdateWithoutForeignWorkersInput>
    create: XOR<EmployersCreateWithoutForeignWorkersInput, EmployersUncheckedCreateWithoutForeignWorkersInput>
    where?: EmployersWhereInput
  }

  export type EmployersUpdateToOneWithWhereWithoutForeignWorkersInput = {
    where?: EmployersWhereInput
    data: XOR<EmployersUpdateWithoutForeignWorkersInput, EmployersUncheckedUpdateWithoutForeignWorkersInput>
  }

  export type EmployersUpdateWithoutForeignWorkersInput = {
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EmployersUncheckedUpdateWithoutForeignWorkersInput = {
    id?: IntFieldUpdateOperationsInput | number
    empname?: StringFieldUpdateOperationsInput | string
    wkaddress?: NullableStringFieldUpdateOperationsInput | string | null
    btname?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type HealthChecksUpsertWithWhereUniqueWithoutForeignWorkersInput = {
    where: HealthChecksWhereUniqueInput
    update: XOR<HealthChecksUpdateWithoutForeignWorkersInput, HealthChecksUncheckedUpdateWithoutForeignWorkersInput>
    create: XOR<HealthChecksCreateWithoutForeignWorkersInput, HealthChecksUncheckedCreateWithoutForeignWorkersInput>
  }

  export type HealthChecksUpdateWithWhereUniqueWithoutForeignWorkersInput = {
    where: HealthChecksWhereUniqueInput
    data: XOR<HealthChecksUpdateWithoutForeignWorkersInput, HealthChecksUncheckedUpdateWithoutForeignWorkersInput>
  }

  export type HealthChecksUpdateManyWithWhereWithoutForeignWorkersInput = {
    where: HealthChecksScalarWhereInput
    data: XOR<HealthChecksUpdateManyMutationInput, HealthChecksUncheckedUpdateManyWithoutForeignWorkersInput>
  }

  export type UsersUpsertWithoutCreatedForeignWorkersInput = {
    update: XOR<UsersUpdateWithoutCreatedForeignWorkersInput, UsersUncheckedUpdateWithoutCreatedForeignWorkersInput>
    create: XOR<UsersCreateWithoutCreatedForeignWorkersInput, UsersUncheckedCreateWithoutCreatedForeignWorkersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCreatedForeignWorkersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCreatedForeignWorkersInput, UsersUncheckedUpdateWithoutCreatedForeignWorkersInput>
  }

  export type UsersUpdateWithoutCreatedForeignWorkersInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCreatedForeignWorkersInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUpsertWithoutUpdatedForeignWorkersInput = {
    update: XOR<UsersUpdateWithoutUpdatedForeignWorkersInput, UsersUncheckedUpdateWithoutUpdatedForeignWorkersInput>
    create: XOR<UsersCreateWithoutUpdatedForeignWorkersInput, UsersUncheckedCreateWithoutUpdatedForeignWorkersInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutUpdatedForeignWorkersInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutUpdatedForeignWorkersInput, UsersUncheckedUpdateWithoutUpdatedForeignWorkersInput>
  }

  export type UsersUpdateWithoutUpdatedForeignWorkersInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutUpdatedForeignWorkersInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type ForeignWorkersCreateWithoutHealthChecksInput = {
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedOn?: Date | string | null
    Employers: EmployersCreateNestedOneWithoutForeignWorkersInput
    createdByUser?: UsersCreateNestedOneWithoutCreatedForeignWorkersInput
    updatedByUser?: UsersCreateNestedOneWithoutUpdatedForeignWorkersInput
  }

  export type ForeignWorkersUncheckedCreateWithoutHealthChecksInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ForeignWorkersCreateOrConnectWithoutHealthChecksInput = {
    where: ForeignWorkersWhereUniqueInput
    create: XOR<ForeignWorkersCreateWithoutHealthChecksInput, ForeignWorkersUncheckedCreateWithoutHealthChecksInput>
  }

  export type UsersCreateWithoutCreatedHealthChecksInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateWithoutCreatedHealthChecksInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersCreateOrConnectWithoutCreatedHealthChecksInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCreatedHealthChecksInput, UsersUncheckedCreateWithoutCreatedHealthChecksInput>
  }

  export type UsersCreateWithoutUpdatedHealthChecksInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
  }

  export type UsersUncheckedCreateWithoutUpdatedHealthChecksInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
  }

  export type UsersCreateOrConnectWithoutUpdatedHealthChecksInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUpdatedHealthChecksInput, UsersUncheckedCreateWithoutUpdatedHealthChecksInput>
  }

  export type ForeignWorkersUpsertWithoutHealthChecksInput = {
    update: XOR<ForeignWorkersUpdateWithoutHealthChecksInput, ForeignWorkersUncheckedUpdateWithoutHealthChecksInput>
    create: XOR<ForeignWorkersCreateWithoutHealthChecksInput, ForeignWorkersUncheckedCreateWithoutHealthChecksInput>
    where?: ForeignWorkersWhereInput
  }

  export type ForeignWorkersUpdateToOneWithWhereWithoutHealthChecksInput = {
    where?: ForeignWorkersWhereInput
    data: XOR<ForeignWorkersUpdateWithoutHealthChecksInput, ForeignWorkersUncheckedUpdateWithoutHealthChecksInput>
  }

  export type ForeignWorkersUpdateWithoutHealthChecksInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Employers?: EmployersUpdateOneRequiredWithoutForeignWorkersNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedForeignWorkersNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateWithoutHealthChecksInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UsersUpsertWithoutCreatedHealthChecksInput = {
    update: XOR<UsersUpdateWithoutCreatedHealthChecksInput, UsersUncheckedUpdateWithoutCreatedHealthChecksInput>
    create: XOR<UsersCreateWithoutCreatedHealthChecksInput, UsersUncheckedCreateWithoutCreatedHealthChecksInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCreatedHealthChecksInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCreatedHealthChecksInput, UsersUncheckedUpdateWithoutCreatedHealthChecksInput>
  }

  export type UsersUpdateWithoutCreatedHealthChecksInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCreatedHealthChecksInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUpsertWithoutUpdatedHealthChecksInput = {
    update: XOR<UsersUpdateWithoutUpdatedHealthChecksInput, UsersUncheckedUpdateWithoutUpdatedHealthChecksInput>
    create: XOR<UsersCreateWithoutUpdatedHealthChecksInput, UsersUncheckedCreateWithoutUpdatedHealthChecksInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutUpdatedHealthChecksInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutUpdatedHealthChecksInput, UsersUncheckedUpdateWithoutUpdatedHealthChecksInput>
  }

  export type UsersUpdateWithoutUpdatedHealthChecksInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutUpdatedHealthChecksInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
  }

  export type UsersCreateWithoutCreatedApiRequestsInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    UpdatedApiRequests?: ApiRequestsCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateWithoutCreatedApiRequestsInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    UpdatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersCreateOrConnectWithoutCreatedApiRequestsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutCreatedApiRequestsInput, UsersUncheckedCreateWithoutCreatedApiRequestsInput>
  }

  export type UsersCreateWithoutUpdatedApiRequestsInput = {
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsCreateNestedManyWithoutCreatedByUserInput
    CreatedHealthChecks?: HealthChecksCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersUncheckedCreateWithoutUpdatedApiRequestsInput = {
    id?: number
    username: string
    password: string
    CreatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedCreateNestedManyWithoutUpdatedByUserInput
    CreatedApiRequests?: ApiRequestsUncheckedCreateNestedManyWithoutCreatedByUserInput
    CreatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutCreatedByUserInput
    UpdatedHealthChecks?: HealthChecksUncheckedCreateNestedManyWithoutUpdatedByUserInput
  }

  export type UsersCreateOrConnectWithoutUpdatedApiRequestsInput = {
    where: UsersWhereUniqueInput
    create: XOR<UsersCreateWithoutUpdatedApiRequestsInput, UsersUncheckedCreateWithoutUpdatedApiRequestsInput>
  }

  export type UsersUpsertWithoutCreatedApiRequestsInput = {
    update: XOR<UsersUpdateWithoutCreatedApiRequestsInput, UsersUncheckedUpdateWithoutCreatedApiRequestsInput>
    create: XOR<UsersCreateWithoutCreatedApiRequestsInput, UsersUncheckedCreateWithoutCreatedApiRequestsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutCreatedApiRequestsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutCreatedApiRequestsInput, UsersUncheckedUpdateWithoutCreatedApiRequestsInput>
  }

  export type UsersUpdateWithoutCreatedApiRequestsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutCreatedApiRequestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    UpdatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUpsertWithoutUpdatedApiRequestsInput = {
    update: XOR<UsersUpdateWithoutUpdatedApiRequestsInput, UsersUncheckedUpdateWithoutUpdatedApiRequestsInput>
    create: XOR<UsersCreateWithoutUpdatedApiRequestsInput, UsersUncheckedCreateWithoutUpdatedApiRequestsInput>
    where?: UsersWhereInput
  }

  export type UsersUpdateToOneWithWhereWithoutUpdatedApiRequestsInput = {
    where?: UsersWhereInput
    data: XOR<UsersUpdateWithoutUpdatedApiRequestsInput, UsersUncheckedUpdateWithoutUpdatedApiRequestsInput>
  }

  export type UsersUpdateWithoutUpdatedApiRequestsInput = {
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUpdateManyWithoutCreatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type UsersUncheckedUpdateWithoutUpdatedApiRequestsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    CreatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedForeignWorkers?: ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserNestedInput
    CreatedApiRequests?: ApiRequestsUncheckedUpdateManyWithoutCreatedByUserNestedInput
    CreatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutCreatedByUserNestedInput
    UpdatedHealthChecks?: HealthChecksUncheckedUpdateManyWithoutUpdatedByUserNestedInput
  }

  export type ForeignWorkersCreateManyCreatedByUserInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ForeignWorkersCreateManyUpdatedByUserInput = {
    id?: number
    employer_id: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
  }

  export type ApiRequestsCreateManyCreatedByUserInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ApiRequestsCreateManyUpdatedByUserInput = {
    id?: number
    reqcode: string
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
  }

  export type HealthChecksCreateManyCreatedByUserInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksCreateManyUpdatedByUserInput = {
    id?: number
    alcode: string
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedOn?: Date | string | null
  }

  export type ForeignWorkersUpdateWithoutCreatedByUserInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Employers?: EmployersUpdateOneRequiredWithoutForeignWorkersNestedInput
    HealthChecks?: HealthChecksUpdateManyWithoutForeignWorkersNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HealthChecks?: HealthChecksUncheckedUpdateManyWithoutForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ForeignWorkersUpdateWithoutUpdatedByUserInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Employers?: EmployersUpdateOneRequiredWithoutForeignWorkersNestedInput
    HealthChecks?: HealthChecksUpdateManyWithoutForeignWorkersNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HealthChecks?: HealthChecksUncheckedUpdateManyWithoutForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    employer_id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsUpdateWithoutCreatedByUserInput = {
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedByUser?: UsersUpdateOneWithoutUpdatedApiRequestsNestedInput
  }

  export type ApiRequestsUncheckedUpdateWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsUpdateWithoutUpdatedByUserInput = {
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdByUser?: UsersUpdateOneWithoutCreatedApiRequestsNestedInput
  }

  export type ApiRequestsUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ApiRequestsUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    reqcode?: StringFieldUpdateOperationsInput | string
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUpdateWithoutCreatedByUserInput = {
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ForeignWorkers?: ForeignWorkersUpdateOneRequiredWithoutHealthChecksNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedHealthChecksNestedInput
  }

  export type HealthChecksUncheckedUpdateWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUncheckedUpdateManyWithoutCreatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUpdateWithoutUpdatedByUserInput = {
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ForeignWorkers?: ForeignWorkersUpdateOneRequiredWithoutHealthChecksNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedHealthChecksNestedInput
  }

  export type HealthChecksUncheckedUpdateWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUncheckedUpdateManyWithoutUpdatedByUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ForeignWorkersCreateManyEmployersInput = {
    id?: number
    alcode: string
    altype?: number | null
    alprefix?: number | null
    alprefixen?: string | null
    alname_en: string
    alsname_en?: string | null
    alprefix_th?: string | null
    alname_th?: string | null
    alsname_th?: string | null
    albdate?: Date | string | null
    algender?: number | null
    alnation?: string | null
    alposid?: number | null
    blood_group?: string | null
    nickname?: string | null
    religion?: string | null
    phone_number?: string | null
    email?: string | null
    address?: string | null
    subdistrict?: string | null
    district?: string | null
    province?: string | null
    postal_code?: string | null
    remark?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type ForeignWorkersUpdateWithoutEmployersInput = {
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HealthChecks?: HealthChecksUpdateManyWithoutForeignWorkersNestedInput
    createdByUser?: UsersUpdateOneWithoutCreatedForeignWorkersNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateWithoutEmployersInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    HealthChecks?: HealthChecksUncheckedUpdateManyWithoutForeignWorkersNestedInput
  }

  export type ForeignWorkersUncheckedUpdateManyWithoutEmployersInput = {
    id?: IntFieldUpdateOperationsInput | number
    alcode?: StringFieldUpdateOperationsInput | string
    altype?: NullableIntFieldUpdateOperationsInput | number | null
    alprefix?: NullableIntFieldUpdateOperationsInput | number | null
    alprefixen?: NullableStringFieldUpdateOperationsInput | string | null
    alname_en?: StringFieldUpdateOperationsInput | string
    alsname_en?: NullableStringFieldUpdateOperationsInput | string | null
    alprefix_th?: NullableStringFieldUpdateOperationsInput | string | null
    alname_th?: NullableStringFieldUpdateOperationsInput | string | null
    alsname_th?: NullableStringFieldUpdateOperationsInput | string | null
    albdate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    algender?: NullableIntFieldUpdateOperationsInput | number | null
    alnation?: NullableStringFieldUpdateOperationsInput | string | null
    alposid?: NullableIntFieldUpdateOperationsInput | number | null
    blood_group?: NullableStringFieldUpdateOperationsInput | string | null
    nickname?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    subdistrict?: NullableStringFieldUpdateOperationsInput | string | null
    district?: NullableStringFieldUpdateOperationsInput | string | null
    province?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    remark?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksCreateManyForeignWorkersInput = {
    id?: number
    alchkhos?: string | null
    alchkstatus?: number | null
    alchkdate: Date | string
    alchkprovid?: string | null
    licenseno?: string | null
    chkname?: string | null
    chkposition?: string | null
    alchkdesc?: string | null
    alchkdoc?: string | null
    isDelete?: boolean
    createdBy?: number | null
    createdOn: Date | string
    updatedBy?: number | null
    updatedOn?: Date | string | null
  }

  export type HealthChecksUpdateWithoutForeignWorkersInput = {
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdByUser?: UsersUpdateOneWithoutCreatedHealthChecksNestedInput
    updatedByUser?: UsersUpdateOneWithoutUpdatedHealthChecksNestedInput
  }

  export type HealthChecksUncheckedUpdateWithoutForeignWorkersInput = {
    id?: IntFieldUpdateOperationsInput | number
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type HealthChecksUncheckedUpdateManyWithoutForeignWorkersInput = {
    id?: IntFieldUpdateOperationsInput | number
    alchkhos?: NullableStringFieldUpdateOperationsInput | string | null
    alchkstatus?: NullableIntFieldUpdateOperationsInput | number | null
    alchkdate?: DateTimeFieldUpdateOperationsInput | Date | string
    alchkprovid?: NullableStringFieldUpdateOperationsInput | string | null
    licenseno?: NullableStringFieldUpdateOperationsInput | string | null
    chkname?: NullableStringFieldUpdateOperationsInput | string | null
    chkposition?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdesc?: NullableStringFieldUpdateOperationsInput | string | null
    alchkdoc?: NullableStringFieldUpdateOperationsInput | string | null
    isDelete?: BoolFieldUpdateOperationsInput | boolean
    createdBy?: NullableIntFieldUpdateOperationsInput | number | null
    createdOn?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableIntFieldUpdateOperationsInput | number | null
    updatedOn?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}