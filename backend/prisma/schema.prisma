generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Adjust based on your database type
  url      = env("DATABASE_URL")
}

model Users {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     String @default("STAFF")

  // ข้อมูลส่วนตัว
  fullname String // ชื่อ-นามสกุล ของ STAFF/DOCTOR
  phone    String?

  // ข้อมูลหมอ (เฉพาะ DOCTOR)
  licenseno   String?
  chkname     String?
  chkposition String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt  

  CreatedForeignWorkers ForeignWorkers[] @relation("UserCreatedForeignWorker")
  UpdatedForeignWorkers ForeignWorkers[] @relation("UserUpdatedForeignWorker")
  CreatedApiRequests    ApiRequests[]    @relation("UserCreatedApiRequest")
  UpdatedApiRequests    ApiRequests[]    @relation("UserUpdatedApiRequest")
  CreatedHealthChecks   HealthChecks[]   @relation("UserCreatedHealthCheck")
  UpdatedHealthChecks   HealthChecks[]   @relation("UserUpdatedHealthCheck")
}

model Employers {
  id        Int     @id @default(autoincrement())
  empname   String  @db.VarChar(100) // ชื่อนายจ้าง / ชื่อสถานประกอบการ
  wkaddress String? @db.VarChar(1000) // สถานที่ทำงาน
  btname    String? @db.VarChar(50) // ประเภทกิจการ

  ForeignWorkers ForeignWorkers[]
}

model ForeignWorkers {
  id          Int       @id @default(autoincrement())
  employer_id Int
  Employers   Employers @relation(fields: [employer_id], references: [id], onDelete: Cascade)

  alcode       String    @unique @db.VarChar(13) // เลขอ้างอิงคนต่างด้าว
  hn           String?   @db.VarChar(13) // เลข HN
  altype       Int? // 1: ขึ้นทะเบียนคนต่างด้าวผิดกฏหมาย, 2: ต่ออายุคนต่างด้าว
  alprefix     Int?
  alprefixen   String?   @db.VarChar(50)
  alname_en    String    @db.VarChar(100) // ชื่อตัวภาษาอังกฤษ
  alsname_en   String?   @db.VarChar(100) // ชื่อสกุลภาษาอังกฤษ
  alprefix_th  String?   @db.VarChar(50)
  alname_th    String?   @db.VarChar(100) // ชื่อตัวภาษาไทย
  alsname_th   String?   @db.VarChar(100) // ชื่อสกุลภาษาไทย
  albdate      DateTime? @db.Date // ปีเดือนวันทีเกิด
  algender     Int? // เพศ 1: ชาย, 2: หญิง
  alnation     String?   @db.Char(1) // สัญชาติ
  alposid      Int? // ประเภทอาชีพ
  blood_group  String?   @db.Char(3) // กรุ๊ปเลือด
  nickname     String?   @db.VarChar(50) // ชื่อเล่น
  religion     String?   @db.VarChar(50) // ศาสนา
  phone_number String?   @db.VarChar(15) // เบอร์โทรศัพท์
  email        String?   @db.VarChar(100)
  address      String?   @db.VarChar(500)
  subdistrict  String?   @db.VarChar(100)
  district     String?   @db.VarChar(100)
  province     String?   @db.VarChar(100)
  postal_code  String?   @db.VarChar(10)
  remark       String?   @db.Text

  HealthChecks     HealthChecks[]
  MedicalHistories MedicalHistories[]

  isDelete      Boolean   @default(false)
  createdBy     Int?
  createdByUser Users?    @relation(references: [id], fields: [createdBy], name: "UserCreatedForeignWorker")
  createdOn     DateTime
  updatedBy     Int?
  updatedByUser Users?    @relation(references: [id], fields: [updatedBy], name: "UserUpdatedForeignWorker")
  updatedOn     DateTime?
}

model HealthChecks {
  id             Int            @id @default(autoincrement())
  alcode         String
  ForeignWorkers ForeignWorkers @relation(fields: [alcode], references: [alcode], onDelete: Cascade)
  alchkhos       String?        @db.VarChar(500) // ชื่อ โรงพยาบาล
  alchkstatus    Int? // ผลการตรวจสุขภาพ
  alchkdate      DateTime       @db.Date // วันที่ตรวจสุขภาพ
  alchkprovid    String?        @db.Char(2) // รหัสจังหวัดที่ตรวจสุขภาพ
  licenseno      String?        @db.VarChar(50) // เลขที่ใบอนุญาตประกอบวิชาชีพ
  chkname        String?        @db.VarChar(100) // ชื่อ-นามสกุลแพทย์
  chkposition    String?        @db.VarChar(100) // ตำแหน่งแพทย์
  alchkdesc      String?        @db.VarChar(500) // รายละเอียดผลตรวจสุขภาพเพิ่มเติม
  alchkdoc       String?        @db.VarChar(500) // URL เอกสารอ้างอิงผลการตรวจสุขภาพ
  isDelete       Boolean        @default(false)
  createdBy      Int?
  createdByUser  Users?         @relation(references: [id], fields: [createdBy], name: "UserCreatedHealthCheck")
  createdOn      DateTime
  updatedBy      Int?
  updatedByUser  Users?         @relation(references: [id], fields: [updatedBy], name: "UserUpdatedHealthCheck")
  updatedOn      DateTime?
}

model MedicalHistories {
  id             Int            @id @default(autoincrement())
  alcode         String
  ForeignWorkers ForeignWorkers @relation(fields: [alcode], references: [alcode], onDelete: Cascade)

  // ข้อมูลการซักประวัติ
  height       Decimal? @db.Decimal(5, 2) // ส่วนสูง (ซม.)
  weight       Decimal? @db.Decimal(5, 2) // น้ำหนัก (กก.)
  skin_color   String?  @db.VarChar(50) // สีผิว
  systolic_bp  Int? // ความดันตัวบน
  diastolic_bp Int? // ความดันตัวล่าง
  pulse_rate   Int? // ชีพจร

  // ข้อมูลการประเมินแพทย์
  doctor_assessment_status String? @db.VarChar(20) // PENDING, COMPLETED
  doctor_health            String? @db.Text // สุขภาพทั่วไป
  doctor_diagnosis         String? @db.Text // ตรวจวินิจฉัย
  doctor_mental_health     String? @db.Text // สุขภาพจิต
  doctor_tuberculosis      String? @db.Text // ตรวจวัณโรค

  // Checkbox options
  doctor_leprosy       String? @db.VarChar(50) // ตรวจโรคเรื้อน (1=ปกติ, 2=ผิดปกติ/ให้การรักษา, 3=ระยะติดต่อ/อาการเป็นที่น่ารังเกียจ)
  doctor_elephantiasis String? @db.VarChar(50) // ตรวจโรคเท้าช้าง (1=ปกติ, 2=ผิดปกติ/ให้การรักษา, 3=อาการเป็นที่น่ารังเกียจ)
  doctor_alcoholism    String? @db.VarChar(20) // ตรวจโรคพิษสุราเรื้อรัง (1=ปกติ, 2=ปรากฏอาการ)
  doctor_pregnancy     String? @db.VarChar(20) // ตรวจการตั้งครรภ์ (1=ไม่ตั้งครรภ์, 2=ตั้งครรภ์)

  // Text fields
  doctor_syphilis      String? @db.Text // ตรวจโรคซิฟิลิส
  doctor_drug_addicted String? @db.Text // ตรวจสารเสพติด

  // Other examination
  doctor_other_exam String? @db.Text // ตรวจอื่นๆ

  createdOn DateTime  @default(now())
  updatedOn DateTime? @updatedAt
}

model ApiRequests {
  id            Int       @id @default(autoincrement())
  reqcode       String
  isDelete      Boolean   @default(false)
  createdBy     Int?
  createdByUser Users?    @relation(references: [id], fields: [createdBy], name: "UserCreatedApiRequest")
  createdOn     DateTime
  updatedBy     Int?
  updatedByUser Users?    @relation(references: [id], fields: [updatedBy], name: "UserUpdatedApiRequest")
  updatedOn     DateTime?
}
